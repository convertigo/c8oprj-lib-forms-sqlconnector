↑isRoot: true
comment: My First Page as root page
preloadPriority: high
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		window["p"] = this;
        		this.local.accordions = ["Employee Directory"];
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	addInSelectedColumn(colName) {
        		this.local.selectedColumns[colName] = false
        	}
        	/*End_c8o_PageFunction*/
        
segment: BrowseTables
title: Title for BrowseTables
↓Header [ngx.components.UIDynamicElement-1727094211861]: 
  beanData: '{"ionBean":"Header"}'
  comment: Page header
  tagName: ion-header
  ↓ToolBar [ngx.components.UIDynamicElement-1727094211864]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓BarTitle [ngx.components.UIDynamicElement-1727094211867]: 
      beanData: '{"ionBean":"BarTitle"}'
      tagName: ion-title
      ↓Grid [ngx.components.UIDynamicElement-1727094211870]: 
        beanData: '{"ionBean":"Grid","Height":"plain:100%"}'
        isEnabled: false
        tagName: ion-grid
        ↓GridRow [ngx.components.UIDynamicElement-1727094211873]: 
          beanData: '{"ionBean":"GridRow"}'
          tagName: ion-row
          ↓GridCol [ngx.components.UIDynamicElement-1727094211876]: 
            beanData: '{"ionBean":"GridCol"}'
            tagName: ion-col
            ↓Image [ngx.components.UIDynamicElement-1727094211879]: 
              beanData: |
                '{
                 "ionBean": "Image",
                 "url": "source:{\"filter\":\"Asset\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"asset\":\"''assets\\\/formssource_GetTableData.svg''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                 "height": "plain:50px"
                }'
              selfClose: true
              tagName: img
          ↓GridCol1 [ngx.components.UIDynamicElement-1727094211882]: 
            beanData: '{"ionBean":"GridCol","FlexAlignement":"plain:ion-align-self-center"}'
            tagName: ion-col
            ↓Text [ngx.components.UIText-1727094211885]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:Select the Baserow database and table you want to get data from
      ↓FontStyle [ngx.components.UIFontStyle-1727094211888]: 
        fontFamily: Saira
        ruleTargets: class1727094211867
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'font-family: Saira;
                '
      ↓Style [ngx.components.UIStyle-1727094211891]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/**
                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                 * They are set using custom property notation, e.g.: --main-color: black;
                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                 * You can find below your component''s properties you can customize within the page.
                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                 * For more informations see https://ionicframework.com/docs/theming.
                **/
                //--color	//Text color of the title
                padding: 0 16px ;
                '
      ↓Div [ngx.components.UIDynamicElement-1727094211894]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Style [ngx.components.UIStyle-1727094211897]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	display:flex;
                  	align-items: center;
                  '
        ↓Image [ngx.components.UIDynamicElement-1727094211900]: 
          beanData: |
            '{
             "ionBean": "Image",
             "url": "script:''data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAScAAACrCAMAAAATgapkAAABSlBMVEX+\/v4VlsAUasH\/\/f79\/f2\/wED39\/f6+vrw8PD09PQUacNqwBX\/\/\/3\/\/f0UasIVlcERdr8Ajro6ncKNxNj\/\/\/oAZcC02OMSmL\/t+vlolssUl7u93uoAYsAAZL0AkMP\/\/\/e+wT2FwsxuntIAj7YAYsOFqc1nsMj39eHBvkG5vDCWyDlivgCMxlMOabsAjri22+HN6OxVisaVutj9\/O3p6sXf4azY2ZnT04bNzXTIyWTDxFX48+fy79Xi4Lq7vyzs7LjZ5em\/x0mzx0amykKRyTt7wSu3zdrk8PrCuzi\/ylquxk5EgbfQ3pqUw0dYxABwvRemy1vW3qbN6bipzXSt2Y7j8M\/D3qWYzl98vzvp9d\/X6cu+3KCbzm1YqsfM3Oc\/orisxOCKwNZ2pMza7+wfeblcjssAWb0carKd0dhchMg\/hrlwss2\/5eeDt9rSyeuJAAAQEUlEQVR4nO2d\/1vbRhLG19KCg7qSbLyyhJEsim0CSQW2SUnI0dZJG7t3vWvu2qZp2pgQ4itpaf\/\/X29nV7JlsI3gIpnKep\/EGMmSpQ8zs99mVwhlupFwSKFtY9uH+ybtEHuDj8BrcEDoyNGPCWfG4c3ju4NDp1\/R9NOii6ceO5AfemnbDEb5sXPkL70Z35fPz9g59m7sTPmJe6Z9esJJJ37npS+Y\/oFLp510wAxKwgJGG3yT8P+KCIc\/jYIt8Hrh0OGfJ3gzft6x04bOOv5h\/i582pEdBdZx6XL928No7IowHu3F\/suFWw9d0YjeZEyT+S2quLNM2DiPa7ndumxSDN2cruV2K59hiqYx18ucbrry4VLkcrzK5CtsUJnXzdCQE86i0ywNDQpnbjdL+SBC4fxyxmm68oFBZZxmKr+ccYqijFM0BZxwxmmmMk7RlHGKpmQ5ybEp7itPlFN8mGLnhDNOkZRxiqbM76Ip4xRNt4iTqsL9wk8Vsf\/sNxURQvwdasZpeK+EqCqhROWsfD4yIUimJLOnsbvFCHDBZwmYEvzkG1R0Bam4L\/22cCKCDCHUdd39\/btc+\/v7rkspHEqugBz3pc+TE6ABt0Lwzt0\/evDpwcNHh4+XljZ2uDY2NpaWlh4fPnp48OmDI1fwIpMNK+5Ln6s9sYDNGKn7R18cPHq8tLOxw7hwNmEBLc7s8OHBg79RxALYhHAV96XP1Z4IM6Ojg0ecxs729kVCYVSAD8zs8cNP71IG110QTipzILT\/4OHjnc83tgWHqZhGvJa2l9iHDw8e0Ms+HK\/mwokVXipFdw8Od65mMwnXztKjT10W2VVe30ovJ1ZJQvsH21\/fiBLT9jZzwM9cXgqkmhMinz3+HO73ZpwY3+2lzw+PZELT7HcqcQ+4x10q26KT2gZaX8g4zfaEyWc7NwU0blZ3SZrtSb77ZOOGHjeunYfpLu+ONqbXla6j7cd3081pJ0JlaQKWC79vLD12+TnVNHFitSYVC1T7hxsiFPv3vz1kwN+yl21fw42cy0a4hGSn2DmQqQh4vJkYpxLkhDskiOMPeFHn2xT3QUDw5MmTp0+ffsl0zxe8\/\/LpU7bjCccXtsLtjZ3Dfc6dsD+BFeu1J8mJ0DYzJ35jiD54EqoTCEL3vvrq2bPnH03Q8+fPnj37igETsALtPDpCSHR1kmZTjtegkuS01iUq78ZVCTp6tCNcb\/vJ0y\/vTeYz1H3\/5dlX97584nvdztIBsyYKPVdUJlt7KF7PS4wTa\/hunvUo9LchiCb0weHO10t\/\/8e957MZjQMDWGBXX3\/96Ij3rjBIMnbXi+sIp4eT803P7\/SGvl1y9M9\/3f\/2vrCWiHrOYT3\/939ejXo4KWnWquskRZyM+jcddnsYxggolIDud98\/+\/Z+dFD3mT765IcXLpyAl3Uqomi9ptfitqcEx4PJpiTZXhdB4xWa+jJ0jCD64seXP3EAV+CCTzz\/6fV3r\/yOYplgdgZK86VdPVdMjT2xu9g0JElz1jqBy2A+psLu2X318y\/ff\/LTc4Frkj569tPL73\/8+ZXLa5RY9JJjqBCs93fNdHEiwElSDK\/RQ8MebqJCbRrKKkr\/9uK7H3\/54fvXr1++\/ETo5evXr3\/44cfvXrx45YqzDHtSYKCPuM2tmq7n9Nxuijhxe2IynLNGh4Q6NyGyE6zCgKb4IOdBabikh1qS8LXgMBlZzfMco5RLHSdHUyRFkyBMrXUtzkUWwYb4TVl5NECOgt\/V0TYss6YPC2tgfr33fRaYTKCkm2nyO8EJpEgeQ7XZtSgrrWQwHHmkGYkELC5hGFpHqFfuV2rVnK+0ctIgSkmGIbXax4wVH+qcAWk0tsI\/2tv7+I1ZNKt6JcyJppCTpzD\/Y0bFrMrxWo1uD\/GBXkaLqEP\/C35ihLlnwq9W8\/35aq1YZUFJ1009jfaEgJMiOIWlKYZte4PNdve4Z7FmDfEzDfx0A5FzQK3ecbnUrxSr1SGckMwK44Rivfy5c+KoFMU2HJsZ12Bts9FonzB198rl8vv3pdLbrf5qpbZbLOqmyaK2OYFTDuwJpceejMmcfFoa+6c5hm0YDmNWKO4yNkXmY9zJeMGmTzKmwO\/Sz0kZvdF4tYEhUwrm0HI4KaA0BZOoj6eGE\/HrmVGkKIXJTBbAnq7DSbs+pxSVdxmnSIrOSbu235XTwolgVi+IiInVE67PKd6BhMT66a7DSbt9nG6lPS0yJ8TrTxmnCPorc0pyXlmMnHYze7od9pQeTimpP6E4OeUyTtE47aaJ01rGKYrIWmz1TPC7ePOfkswvyDhF0l+aU7LxaRKT0OtQ45ym9femlBO5zAnG87QATYicIimFCty\/CZ3io55yM+gnNxeLkyTZvgxvNJygaYptFGCwZZePjevVERFdvOpJc0o0Pl3g5NjS5sn68fFx96S95o12KornfPNnuclUftuv6eEB8i2u1cXxO01zzk6WqRj2Rci1Tg1wOG5WzmYH8yFhRCjtvDXB\/7in6W\/4qAop5fQF4aRJRstC\/pR7jFgtscFHi5W6Z7d6BC4oyAcj7\/pFvSIcbpWnbCwQJ8luuTIZ5qeoiDQMRWOB3au3x+dIEyrTraIZcGIHMU76onDSzix+x\/7dyTJq8NFi79fGcJkQMXsBkljQlgjlvj2hUnFRONW74Guy7N45abdPenkKnBi++ilFFBLCVJLPW3lIx0QUy9YbAGMOOS2KPWmeBRmahLQ9yLuwC22rbUNRV+iJFCjS3Fo1zdWSRQnkz6Em5KuGOC1GeadpLWYoVEYdR9MYH4UVfr95bLvRdSFVFZH2wGS1gVp1tYn4DAZ3ayE5Of8lRKYqOXYUyWN1TM8zDEhHHORFSmv71wGveleqlXdIhZkLzd1wfEozp1H7jplPCyKQrHY8DRpzmsGrCprRhmeugJkZBdE0MfUtXsTJuJ+rVqZwynFOsc7pnE87WGOGg2SMKG070GLxRJVK8Y5hnSdMTu2gHWzqtabI1izV9Gl+ly5OIb9jLZMepNGzWz4uQP1S4bFdGSAR3R1lxKla4sn1aL1mTvO7tHJimIyGWGWNVbdPzmyRRecZa3yODzlmoX3ISe\/ztF9kVReHU6ibyWn6S14RgtueoTFrkhg8nk1\/Ug\/nP61a3PGs3DROzB9Ty0nzvDvQzoVJQJRYp46heZLdAAoYjXOqWMKeppZ3CXHiPxOYHzxuT5IxOKauzMHILjphBZ8ExR1wal\/gxKsKFjOnxbCnzTAnFqKchsWXUCNIpaTrMF9sT7KnXGBPi+J3l\/Kf7MKJBROh+QyotmF4DbAcxqyusfqTbo7Hp+I8OSU679UZHy5QFMcenGAKCxCoiA5sb433LtGODfYUcNoSk+6aRXOOfjdPThJrrxhOq8On3zGDqksFXt5hdKZIg4BT8T0vFtH76jw5Jed3kHfoDxVoopUC\/XIwZ7HDghTb3bUlpYNULGPaqCsDgYD977H2DatVbYl2MDgpKhXTy0ke5WFozJIEMxiY8k4pczsZInn9BNbTRNQ6qw\/8WS3FEmXsCLFqFd5ugRoXcNJ9iRlmKeKEw5ykwVpdE006yWgRWACRdG1F+s1FVGXF37pTgLG6nF59k6esHWzJzO1yI066XvFlpsyeyHhez29kT3L44KbxK3RtsqBzYthevQzIEHWPf9dr+m6l9jYvY2Zs2Krk9BCn4m7VV+rsScyX8ofJnRZG1knrTPKUszZ0AFMZ0n68+oBVqVjxh4m19\/b8vNRE2FVlitDHujnkJJO9UuljX6ucH+NEY732pDn5E6m5rxHUOz7uWP4aTu+gRi45m5TFccTnTCOxmDahmPwhJk37nGQ0mhzV5+6ZUk6a0YKoQ\/gcar5yA3VFLVRzGi7FqphTrSK+JLlKm5WqGeKEMSZYvKB+Jc2cnBbPz2X1SyygkIbNDU1SnM0VHmtklVeVmGjZxwScMCwIoY5WiUidPRF0ao+q4i2LwjIp7HthQj25c2qLegIMFA+6RLT7MB96eXce1Jb03GqwfEggxqlq8v7xeDklVx8nqDHiJEmtk46YU86+u9PwbOh\/GjZnfuv2EKUsUjFY5dCYZmXVuqh+BSJXisYRLnDSbKewdtpot09bZ4ZjSLbkDVszilT3ft\/62IIBdITf1kLZTpXxzCezovOFDCAvOtarnx8nViVgfOo2pBV4iuaNcup4PkZBL74RY6HhVgpQMcOodD58lSZOMuMUMS9azKPW9T7zPBhcf1+sVHMzlECefXLxCV+Hk6ZAu6W4BYu0YZeUazNzNNPGKWqevZhHzerZtRIf5MRob3fOnJJsB1+DE\/c71gqulQmvPJA\/KjNApSo+sTgedb75aB61Xtvzj26+mQ6Kz9tIUb0gKqdhnr1pVis8cfX8fOvNxBVoRva0yJx0kQKtQ19U1cxNs6iFtyfIrGf1JZFtPxxYuMzJTFF8wjfiFEmcU1rWock4RVOsnHYzTtE4pWe9HsYpxnVDUsUpLnvKpYxTXPaUwHqHSfZntm3t4sTND8IJxu\/WkZoee7IvTXD9YJz2ULyPukluPJjExilX0YvNtHCK2Z6aKCX1J5nKTZsP381alPVGnFjLr5+PefAxOU6uTDc9P\/XpA9tTZXcvzksHJZfvS2W5V4hgTNfnlKtuxdxbkGC9gMouJZ0zR9GuDlHX5FTrW7E\/1y3JddcQpp2B589m+TCcoEeqdm7Fu\/Y4KNHnBFLsWpuOBwtofxBOYoizBMkIcV97opxYoYdo16t7V0SpqJxM06z1mwThmB\/qhhL2O5XwTLn2mROsqzLZrq5ct9bka4nouWp\/HZaDkON\/7mSinIKHZljtgWN42lSrmsnJFInAbyB+\/zF8XE7clz6X55gSirprTt2RFD7jRQnSNqPaE0Tvqv62B8uKpJkTTCUj1sma53gTPW8qJ3\/t\/2qt8ucfiD8fB6eak\/8cKavbaHmOwYfTNZ6T6Ik3sP7TEI2fcigeJGEWi5X++yam4nQqSQISmhsnLszMCvWO22sDz7DFjHPF4E\/A0RSjMJpw4M89KBZz5up5uQlPeVGTYBNWsvWCkOAZf\/CgTsosA\/eOu43N1qBQKJx5mgOPJeHPJeHPbIPVshig\/lZpvWmBGYqUaVCQo5mA5sbJF2ZfCpOpIdgsL1tWr9frdDqwdla5XC6BynvN5jsrL4jAw99YWy7myQcTNG9O8NXhX0JPS7qwdRSGkmYEugWcrhJGMT8bOIr+ApxuhRKtj99Uc7emvwinW6DM76IpxGkl4zRdASeEg57yTJO0HOK0POdrucXCK\/khp\/xKZlDTxJwtGCHMDGq68ApzuxGnlQzUZK0M3Y473nLmeRO1HDInXoNaySxqghiVfDh\/ASLUSmZSF5S\/w60pzImD8jdnAuWX7zAeIa8LgVq5k2moFeF0F5oqGII5oMrki9nSZUyIl3ocVSauPKc0oeErvDKTLzwRUgjVh4qDH\/JkH0TXvqKZheFVXSz\/39E30hUnnUOnUNYPNU3\/AxwmL5tIXVTyAAAAAElFTkSuQmCC''",
             "height": "plain:50px"
            }'
          selfClose: true
          tagName: img
          ↓Style [ngx.components.UIStyle-1727094211903]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    	padding-right:16px;
                    
        ↓Div1 [ngx.components.UIDynamicElement-1727094211906]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓H1 [ngx.components.UIDynamicElement-1727094211909]: 
            beanData: '{"ionBean":"Heading1"}'
            tagName: h1
            ↓Text [ngx.components.UIText-1727094211912]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:SQL Connector
            ↓Style [ngx.components.UIStyle-1727094211915]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'word-wrap: break-word;  
                      '
  ↓class [ngx.components.UIAttribute-1727094211918]: 
    attrName: class
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: plain:ion-no-border
↓Content [ngx.components.UIDynamicElement-1727094211921]: 
  beanData: '{"ionBean":"Content","Padding":"plain:ion-no-padding"}'
  comment: Page content
  tagName: ion-content
  ↓Div [ngx.components.UIDynamicElement-1727094211924]: 
    beanData: '{"ionBean":"DivTag"}'
    isEnabled: false
    tagName: div
    ↓tag [ngx.components.UIControlDirective-1727094211927]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:local.show else ElseBlock_1679052710559
      ↓Breadcrumbs [ngx.components.UIDynamicElement-1727094211930]: 
        beanData: '{"ionBean":"Breadcrumbs","IonMode":"plain:ios"}'
        tagName: ion-breadcrumbs
        ↓Breadcrumb2 [ngx.components.UIDynamicElement-1727094211933]: 
          beanData: '{"ionBean":"Breadcrumb"}'
          tagName: ion-breadcrumb
          ↓some_text [ngx.components.UIText-1727094211936]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:Select a database and table
          ↓attr [ngx.components.UIControlEvent-1727094211939]: 
            ↓goHome [ngx.components.UICustomAsyncAction-1727094211942]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		try {
                      			page.local.show = true;
                      			page.local.selectedColumns = {};
                      		} catch (e) {
                      		
                      		} finally {
                      			return;
                      		}
                      
        ↓Breadcrumb [ngx.components.UIDynamicElement-1727094211945]: 
          beanData: '{"ionBean":"Breadcrumb"}'
          tagName: ion-breadcrumb
          ↓some_text [ngx.components.UIText-1727094211948]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: source:{"filter":"Local","project":"lib_BaseRow","input":"","model":{"data":[{"localObject":"local"}],"path":"?.baseName","prefix":"","suffix":"","custom":"","useCustom":false}}
          ↓Icon [ngx.components.UIDynamicElement-1727094211951]: 
            beanData: |
              '{
               "ionBean": "Icon",
               "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''server''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
               "IconSlot": "plain:start"
              }'
            tagName: ion-icon
        ↓Breadcrumb1 [ngx.components.UIDynamicElement-1727094211954]: 
          beanData: '{"ionBean":"Breadcrumb"}'
          tagName: ion-breadcrumb
          ↓some_text [ngx.components.UIText-1727094211957]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: source:{"filter":"Local","project":"lib_BaseRow","input":"","model":{"data":[{"localObject":"local"}],"path":"?.tableName","prefix":"","suffix":"","custom":"","useCustom":false}}
          ↓Icon [ngx.components.UIDynamicElement-1727094211960]: 
            beanData: |
              '{
               "ionBean": "Icon",
               "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''menu-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
               "IconSlot": "plain:start"
              }'
            tagName: ion-icon
    ↓tag1 [ngx.components.UIElement-1727094211963]: 
      identifier: ElseBlock_1679052710559
      tagName: ng-template
      ↓Breadcrumbs [ngx.components.UIDynamicElement-1727094211966]: 
        beanData: '{"ionBean":"Breadcrumbs","IonMode":"plain:ios"}'
        tagName: ion-breadcrumbs
        ↓Breadcrumb [ngx.components.UIDynamicElement-1727094211969]: 
          beanData: '{"ionBean":"Breadcrumb"}'
          tagName: ion-breadcrumb
          ↓some_text [ngx.components.UIText-1727094211972]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:Select a database and table
          ↓attr [ngx.components.UIControlEvent-1727094211975]: 
            ↓goHome [ngx.components.UICustomAsyncAction-1727094211978]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		try {
                      			page.local.show = true;
                      			page.local.selectedColumns = {};
                      		} catch (e) {
                      		
                      		} finally {
                      			return;
                      		}
                      
    ↓Style [ngx.components.UIStyle-1727094211981]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '	display: flex;
              	justify-content: center;
              '
  ↓Grid [ngx.components.UIDynamicElement-1727094211984]: 
    beanData: '{"ionBean":"Grid","Height":"plain:100%"}'
    tagName: ion-grid
    ↓GridRow [ngx.components.UIDynamicElement-1727094211987]: 
      beanData: '{"ionBean":"GridRow"}'
      tagName: ion-row
      ↓GridColDatabase [ngx.components.UIDynamicElement-1727094211990]: 
        beanData: '{"ionBean":"GridCol","Size":"script:local.show ? ''4'' : ''12''"}'
        tagName: ion-col
        ↓CardContainer1 [ngx.components.UIDynamicElement-1727106162463]: 
          beanData: '{"ionBean":"Card"}'
          tagName: ion-card
          ↓CardHeader [ngx.components.UIDynamicElement-1727106162466]: 
            beanData: '{"ionBean":"CardHeader"}'
            tagName: ion-card-header
            ↓Div [ngx.components.UIDynamicElement-1727106162469]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1727106162472]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	border-bottom: 1px solid var(--ion-color-dark);
                        	padding:16px;
                        '
              ↓CardTitle [ngx.components.UIDynamicElement-1727106162475]: 
                beanData: '{"ionBean":"CardTitle"}'
                identifier: leftTitle
                tagName: ion-card-title
                ↓TextItem [ngx.components.UIDynamicElement-1727106162478]: 
                  beanData: '{"ionBean":"TextItem"}'
                  tagName: ion-text
                  ↓Text [ngx.components.UIText-1727106162481]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:Select SQL database type and configure access
                  ↓FontStyle [ngx.components.UIFontStyle-1727106162484]: 
                    fontFamily: Saira
                    fontSize: 24px
                    fontStyle: normal
                    ruleTargets: class1727106162478
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'font-family: Saira;
                            font-size: 24px;
                            font-style: normal;
                            '
                ↓Style [ngx.components.UIStyle-1727106162487]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	text-align:center;
                          
            ↓Style [ngx.components.UIStyle-1727106162490]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	padding: 0;
                      '
            ↓Div1 [ngx.components.UIDynamicElement-1727106162493]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1727106162496]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'padding: 0 16px;
                        '
              ↓attr [ngx.components.UIAttribute-1727106162523]: 
                attrName: '[ngStyle]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: 'script:rightDiv && rightDiv.nativeElement ? {''min-height'': rightDiv.nativeElement.clientHeight + ''px''} : {}'
          ↓CardContent [ngx.components.UIDynamicElement-1727106162526]: 
            beanData: '{"ionBean":"CardContent"}'
            tagName: ion-card-content
            ↓Grid [ngx.components.UIDynamicElement-1727106447924]: 
              beanData: '{"ionBean":"Grid"}'
              tagName: ion-grid
              ↓GridRow [ngx.components.UIDynamicElement-1727106447911]: 
                beanData: '{"ionBean":"GridRow"}'
                tagName: ion-row
                ↓GridCol [ngx.components.UIDynamicElement-1727106447913]: 
                  beanData: '{"ionBean":"GridCol","Size":"plain:4"}'
                  tagName: ion-col
                  ↓GenericItem [ngx.components.UIDynamicElement-1727106162499]: 
                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                    tagName: ion-item
                    ↓Icon [ngx.components.UIDynamicElement-1727106162502]: 
                      beanData: |
                        '{
                         "ionBean": "Icon",
                         "IconName": "plain:information-circle-outline",
                         "IconSlot": "plain:start"
                        }'
                      tagName: ion-icon
                    ↓Label [ngx.components.UIDynamicElement-1727106162505]: 
                      beanData: '{"ionBean":"Label"}'
                      tagName: ion-label
                      ↓Paragraph [ngx.components.UIDynamicElement-1727106162508]: 
                        beanData: '{"ionBean":"Paragraph"}'
                        tagName: p
                        ↓some_text [ngx.components.UIText-1727106162511]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:Select in the list below the database techology you want to connect to
                      ↓Style [ngx.components.UIStyle-1727106162514]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '/**
                                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                 * They are set using custom property notation, e.g.: --main-color: black;
                                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                                 * You can find below your component''s properties you can customize within the page.
                                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                 * For more informations see https://ionicframework.com/docs/theming.
                                **/
                                //--color	//Color of the label
                                '
                      ↓FontStyle [ngx.components.UIFontStyle-1727106162517]: 
                        fontStyle: italic
                        ruleTargets: class1727106162505
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'font-style: italic;
                                '
                      ↓class [ngx.components.UIAttribute-1727106162520]: 
                        attrName: 
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:text-wrap
                  ↓FormItem1 [ngx.components.UIDynamicElement-1727110274482]: 
                    beanData: '{"ionBean":"FormItem"}'
                    tagName: ion-item
                    ↓SelectContainer [ngx.components.UIDynamicElement-1727106375278]: 
                      beanData: |
                        '{
                         "ionBean": "Select",
                         "ControlName": "plain:name1727106375278",
                         "DoubleBinding": "source:{\"filter\":\"Local\",\"project\":\"lib_SQLConnector\",\"input\":\"\",\"model\":{\"data\":[{\"localObject\":\"local\"}],\"path\":\"?.SQLDriver\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                         "Interface": "plain:popover"
                        }'
                      tagName: ion-select
                      ↓SelectOption [ngx.components.UIDynamicElement-1727106390104]: 
                        beanData: '{"ionBean":"SelectOption","Value":"plain:net.sourceforge.jtds.jdbc.Driver"}'
                        tagName: ion-select-option
                        ↓Label [ngx.components.UIDynamicElement-1727106399914]: 
                          beanData: '{"ionBean":"Label"}'
                          tagName: ion-label
                          ↓Text [ngx.components.UIText-1727106399913]: 
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:SQL Server
                      ↓SelectOption1 [ngx.components.UIDynamicElement-1727106479536]: 
                        beanData: '{"ionBean":"SelectOption","Value":"plain:org.postgresql.Driver"}'
                        tagName: ion-select-option
                        ↓Label [ngx.components.UIDynamicElement-1727106479539]: 
                          beanData: '{"ionBean":"Label"}'
                          tagName: ion-label
                          ↓Text [ngx.components.UIText-1727106479542]: 
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:Postgres SQL
                      ↓SelectOption2 [ngx.components.UIDynamicElement-1727106481805]: 
                        beanData: '{"ionBean":"SelectOption","Value":"plain:org.mariadb.jdbc.Driver"}'
                        tagName: ion-select-option
                        ↓Label [ngx.components.UIDynamicElement-1727106481808]: 
                          beanData: '{"ionBean":"Label"}'
                          tagName: ion-label
                          ↓Text [ngx.components.UIText-1727106481811]: 
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:MariaDB
                      ↓SelectOption3 [ngx.components.UIDynamicElement-1727106483490]: 
                        beanData: '{"ionBean":"SelectOption","Value":"plain:com.mysql.jdbc.Driver"}'
                        tagName: ion-select-option
                        ↓Label [ngx.components.UIDynamicElement-1727106483493]: 
                          beanData: '{"ionBean":"Label"}'
                          tagName: ion-label
                          ↓Text [ngx.components.UIText-1727106483496]: 
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:MySQL
                      ↓SelectOption4 [ngx.components.UIDynamicElement-1727106484893]: 
                        beanData: '{"ionBean":"SelectOption","Value":"plain:oracle.jdbc.driver.OracleDriver"}'
                        tagName: ion-select-option
                        ↓Label [ngx.components.UIDynamicElement-1727106484896]: 
                          beanData: '{"ionBean":"Label"}'
                          tagName: ion-label
                          ↓Text [ngx.components.UIText-1727106484899]: 
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:Oracle
                      ↓SelectOption5 [ngx.components.UIDynamicElement-1727106486295]: 
                        beanData: '{"ionBean":"SelectOption","Value":"plain:com.ibm.as400.access.AS400JDBCDriver"}'
                        tagName: ion-select-option
                        ↓Label [ngx.components.UIDynamicElement-1727106486298]: 
                          beanData: '{"ionBean":"Label"}'
                          tagName: ion-label
                          ↓Text [ngx.components.UIText-1727106486301]: 
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:IBM DB2
                      ↓SelectOption6 [ngx.components.UIDynamicElement-1727107888221]: 
                        beanData: '{"ionBean":"SelectOption","Value":"plain:type.in.your.driver.class"}'
                        tagName: ion-select-option
                        ↓Label [ngx.components.UIDynamicElement-1727107888224]: 
                          beanData: '{"ionBean":"Label"}'
                          tagName: ion-label
                          ↓Text [ngx.components.UIText-1727107888227]: 
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:Other
                  ↓FormItem [ngx.components.UIDynamicElement-1727109292822]: 
                    beanData: '{"ionBean":"FormItem"}'
                    tagName: ion-item
                    ↓TextInput [ngx.components.UIDynamicElement-1727109292820]: 
                      beanData: |
                        '{
                         "ionBean": "Input",
                         "ControlName": "plain:controlName",
                         "DoubleBinding": "source:{\"filter\":\"Local\",\"project\":\"lib_SQLConnector\",\"input\":\"\",\"model\":{\"data\":[{\"localObject\":\"local\"}],\"path\":\"?.SQLDriver\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                         "Label": "plain:Driver : "
                        }'
                      tagName: ion-input
                ↓GridCol1 [ngx.components.UIDynamicElement-1727106447919]: 
                  beanData: '{"ionBean":"GridCol"}'
                  tagName: ion-col
                  ↓GenericItem [ngx.components.UIDynamicElement-1727108520852]: 
                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                    tagName: ion-item
                    ↓Icon [ngx.components.UIDynamicElement-1727108520855]: 
                      beanData: |
                        '{
                         "ionBean": "Icon",
                         "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_SQLConnector\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''flash''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                         "IconSlot": "plain:start"
                        }'
                      tagName: ion-icon
                    ↓Label [ngx.components.UIDynamicElement-1727108520858]: 
                      beanData: '{"ionBean":"Label"}'
                      tagName: ion-label
                      ↓Paragraph [ngx.components.UIDynamicElement-1727108520861]: 
                        beanData: '{"ionBean":"Paragraph"}'
                        tagName: p
                        ↓some_text [ngx.components.UIText-1727108520864]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:Enter database user and password and configure the DatabaseURL by replacing <server_name> and <database_name> with the values provided by your SQL data scientist. Then hit the Connect button. If the configuration is correct, you will get a success message.
                      ↓Style [ngx.components.UIStyle-1727108520867]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '/**
                                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                 * They are set using custom property notation, e.g.: --main-color: black;
                                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                                 * You can find below your component''s properties you can customize within the page.
                                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                 * For more informations see https://ionicframework.com/docs/theming.
                                **/
                                //--color	//Color of the label
                                '
                      ↓FontStyle [ngx.components.UIFontStyle-1727108520870]: 
                        fontStyle: italic
                        ruleTargets: class1727108520858
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'font-style: italic;
                                '
                      ↓class [ngx.components.UIAttribute-1727108520873]: 
                        attrName: 
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:text-wrap
                  ↓Form [ngx.components.UIForm-1727108106436]: 
                    identifier: formSample
                    ↓FormItem [ngx.components.UIDynamicElement-1727108106167]: 
                      beanData: '{"ionBean":"FormItem"}'
                      tagName: ion-item
                      ↓TextInput [ngx.components.UIDynamicElement-1727108106209]: 
                        beanData: |
                          '{
                           "ionBean": "Input",
                           "ControlName": "plain:name",
                           "Label": "plain:Database Username"
                          }'
                        tagName: ion-input
                    ↓FormItem1 [ngx.components.UIDynamicElement-1727108106317]: 
                      beanData: '{"ionBean":"FormItem"}'
                      tagName: ion-item
                      ↓TextInput [ngx.components.UIDynamicElement-1727108106322]: 
                        beanData: |
                          '{
                           "ionBean": "Input",
                           "ControlName": "plain:firstname",
                           "Label": "plain:Database Password",
                           "Type": "plain:password"
                          }'
                        tagName: ion-input
                    ↓FormItem2 [ngx.components.UIDynamicElement-1727110740690]: 
                      beanData: '{"ionBean":"FormItem"}'
                      tagName: ion-item
                      ↓TextInput [ngx.components.UIDynamicElement-1727110740693]: 
                        beanData: |
                          '{
                           "ionBean": "Input",
                           "ControlName": "plain:JDBC",
                           "Label": "plain:Database URL",
                           "Value": "plain:jdbc:postgresql:\/\/<server_name>:<port(optional)>\/<database_name>"
                          }'
                        tagName: ion-input
                    ↓SubmitButton [ngx.components.UIDynamicElement-1727108106383]: 
                      beanData: '{"ionBean":"SubmitButton","IconSlot":"plain:end"}'
                      tagName: ion-button
                      ↓Text [ngx.components.UIText-1727108106413]: 
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Connect
                      ↓FormatLayout [ngx.components.UIDynamicAttr-1727110535215]: 
                        beanData: '{"ionBean":"FormatLayout","FloatPlacement":"plain:ion-float-right"}'
                        selfClose: false
                    ↓Event [ngx.components.UIControlEvent-1727108106419]: 
                      attrName: (ngSubmit)
                      eventName: onSubmit
                      ↓Alert [ngx.components.UIDynamicAction-1727108106423]: 
                        beanData: '{"ionBean":"AlertAction","message":"script:''formSample value is\\\\n'' + JSON.stringify(this?.formSample.value)"}'
        ↓CardContainer [ngx.components.UIDynamicElement-1727094211993]: 
          beanData: '{"ionBean":"Card"}'
          tagName: ion-card
          ↓CardHeader [ngx.components.UIDynamicElement-1727094211996]: 
            beanData: '{"ionBean":"CardHeader"}'
            tagName: ion-card-header
            ↓Div [ngx.components.UIDynamicElement-1727094211999]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1727094212002]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	border-bottom: 1px solid var(--ion-color-dark);
                        	padding:16px;
                        '
              ↓CardTitle [ngx.components.UIDynamicElement-1727094212005]: 
                beanData: '{"ionBean":"CardTitle"}'
                identifier: leftTitle
                tagName: ion-card-title
                ↓TextItem [ngx.components.UIDynamicElement-1727094212008]: 
                  beanData: '{"ionBean":"TextItem"}'
                  tagName: ion-text
                  ↓Text [ngx.components.UIText-1727094212011]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:Select a database and table
                  ↓FontStyle [ngx.components.UIFontStyle-1727094212014]: 
                    fontFamily: Saira
                    fontSize: 24px
                    fontStyle: normal
                    ruleTargets: class1727094212008
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'font-family: Saira;
                            font-size: 24px;
                            font-style: normal;
                            '
                ↓Style [ngx.components.UIStyle-1727094212017]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	text-align:center;
                          
            ↓Style [ngx.components.UIStyle-1727094212020]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	padding: 0;
                      '
            ↓Div1 [ngx.components.UIDynamicElement-1727094212023]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1727094212026]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'padding: 0 16px;
                        '
              ↓GenericItem [ngx.components.UIDynamicElement-1727094212029]: 
                beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                tagName: ion-item
                ↓Icon [ngx.components.UIDynamicElement-1727094212032]: 
                  beanData: |
                    '{
                     "ionBean": "Icon",
                     "IconName": "plain:information-circle-outline",
                     "IconSlot": "plain:start"
                    }'
                  tagName: ion-icon
                ↓Label [ngx.components.UIDynamicElement-1727094212035]: 
                  beanData: '{"ionBean":"Label"}'
                  tagName: ion-label
                  ↓Paragraph [ngx.components.UIDynamicElement-1727094212038]: 
                    beanData: '{"ionBean":"Paragraph"}'
                    tagName: p
                    ↓some_text [ngx.components.UIText-1727094212041]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Please select among the following elements a database and a table
                  ↓Style [ngx.components.UIStyle-1727094212044]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '/**
                             * Custom properties (sometimes referred to as CSS variables or cascading variables)
                             * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                             * They are set using custom property notation, e.g.: --main-color: black;
                             * and are accessed using the var() function, e.g.: color: var(--main-color);
                             * You can find below your component''s properties you can customize within the page.
                             * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                             * For more informations see https://ionicframework.com/docs/theming.
                            **/
                            //--color	//Color of the label
                            '
                  ↓FontStyle [ngx.components.UIFontStyle-1727094212047]: 
                    fontStyle: italic
                    ruleTargets: class1727094212035
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'font-style: italic;
                            '
                  ↓class [ngx.components.UIAttribute-1727094212050]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:text-wrap
              ↓attr [ngx.components.UIAttribute-1727094212053]: 
                attrName: '[ngStyle]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: 'script:rightDiv && rightDiv.nativeElement ? {''min-height'': rightDiv.nativeElement.clientHeight + ''px''} : {}'
          ↓CardContent [ngx.components.UIDynamicElement-1727094212056]: 
            beanData: '{"ionBean":"CardContent"}'
            tagName: ion-card-content
            ↓AccordionGroup [ngx.components.UIDynamicElement-1727094212059]: 
              beanData: '{"ionBean":"AccordionGroup","Value":"script:this.local.accordions"}'
              tagName: ion-accordion-group
              ↓Directive [ngx.components.UIControlDirective-1727094212062]: 
                directiveIndexName: dbIdx
                directiveItemName: database
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: source:{"filter":"Sequence","project":"lib_BaseRow","input":"","model":{"data":[{"sequence":"lib_BaseRow.ApplicationsList","marker":""}],"path":"?.array","prefix":"","suffix":"","custom":"","useCustom":false}}
                ↓Accordion [ngx.components.UIDynamicElement-1727094212065]: 
                  beanData: '{"ionBean":"Accordion","Value":"source:{\"filter\":\"Iteration\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1727094212062}],\"path\":\"?.id\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"}'
                  tagName: ion-accordion
                  ↓GenericItem [ngx.components.UIDynamicElement-1727094212068]: 
                    beanData: '{"ionBean":"GenericItem","IonSlot":"plain:header"}'
                    tagName: ion-item
                    ↓Icon [ngx.components.UIDynamicElement-1727094212071]: 
                      beanData: |
                        '{
                         "ionBean": "Icon",
                         "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''server''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                         "IconSlot": "plain:start"
                        }'
                      tagName: ion-icon
                    ↓Label [ngx.components.UIDynamicElement-1727094212074]: 
                      beanData: '{"ionBean":"Label"}'
                      tagName: ion-label
                      ↓Text [ngx.components.UIText-1727094212077]: 
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1727094212062}],"path":"?.name","prefix":"","suffix":"","custom":"","useCustom":false}}
                  ↓ListContainer [ngx.components.UIDynamicElement-1727094212080]: 
                    beanData: '{"ionBean":"List","IonSlot":"plain:content"}'
                    tagName: ion-list
                    ↓Directive [ngx.components.UIControlDirective-1727094212083]: 
                      directiveItemName: table
                      directiveSource: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1727094212062}],"path":"?.tables","prefix":"","suffix":"","custom":"","useCustom":false}}
                      ↓ListItem [ngx.components.UIDynamicElement-1727094212086]: 
                        beanData: '{"ionBean":"ListItem"}'
                        tagName: ion-item
                        ↓Icon [ngx.components.UIDynamicElement-1727094212089]: 
                          beanData: |
                            '{
                             "ionBean": "Icon",
                             "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''menu-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                             "IconSlot": "plain:start"
                            }'
                          tagName: ion-icon
                        ↓Label [ngx.components.UIDynamicElement-1727094212092]: 
                          beanData: '{"ionBean":"Label"}'
                          tagName: ion-label
                          ↓Text [ngx.components.UIText-1727094212095]: 
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1727094212083},{"priority":1727094212062}],"path":"?.name","prefix":"","suffix":"","custom":"","useCustom":false}}
                        ↓Button [ngx.components.UIDynamicElement-1727094212098]: 
                          beanData: '{"ionBean":"Button"}'
                          tagName: ion-button
                          ↓Label [ngx.components.UIDynamicElement-1727094212101]: 
                            beanData: '{"ionBean":"Label"}'
                            tagName: ion-label
                            ↓Text [ngx.components.UIText-1727094212104]: 
                              i18n: true
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:Select
                          ↓Event [ngx.components.UIControlEvent-1727094212107]: 
                            ↓CallSequence [ngx.components.UIDynamicAction-1727094212110]: 
                              beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:lib_BaseRow.FieldsList"}'
                              ↓table_id [ngx.components.UIControlVariable-1727094212113]: 
                                comment: table_id
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:table.id
                              ↓SelectAllColumnsAfterInit [ngx.components.UICustomAction-1727094212116]: 
                                actionValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                      →: |
                                        '		
                                        		if (page.navParams.data.noCols != ''true'')
                                        			page.local.show = true;
                                        		
                                        		page.local.selectedColumns = [];
                                        		let i = 0;
                                        		
                                        		if(page.local.target == "table"){
                                        			vars.columns.forEach((item, i) => {
                                        				page.local.selectedColumns.push({
                                        					name : item.name,
                                        					selected : !event.target.checked,
                                        					order: i++,
                                        					id: item.id,
                                        					table_id: item.table_id 
                                        				})	
                                        			})
                                        		}
                                        		else if(page.local.target == "select"){
                                        			page.local.selectedColumns["id"] = {
                                        					selected : true,
                                        					displayValue: false,
                                        					value:true,
                                        					order: 0,
                                        					id: "id"
                                        				}	
                                        			vars.columns.forEach((item, i) => {
                                        				page.local.selectedColumns[item.name] = {
                                        					selected : !event.target.checked,
                                        					displayValue: i == 0,
                                        					value:false,
                                        					order: i++,
                                        					id: item.id,
                                        					table_id: item.table_id 
                                        				}	
                                        			})
                                        			let str = JSON.stringify(vars.columns[0]);
                                        			page.local.displayColumn = vars.columns[0].name;
                                        			page.local.valueColumn = "id";
                                        			page.local.diffrentVals = false;
                                        			
                                        		}
                                        		
                                        		resolve();
                                        '
                                ↓columns [ngx.components.UIControlVariable-1727094212119]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: source:{"filter":"Sequence","project":"lib_BaseRow","input":"","model":{"data":[{"sequence":"lib_BaseRow.FieldsList","marker":""}],"path":"?.array","prefix":"","suffix":"","custom":"","useCustom":false}}
                            ↓SetLocal [ngx.components.UIDynamicAction-1727094212122]: 
                              beanData: |
                                '{
                                 "ionBean": "SetLocalAction",
                                 "Property": "plain:tableName",
                                 "Value": "source:{\"filter\":\"Iteration\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1727094212083},{\"priority\":1727094212062}],\"path\":\"?.name\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                                }'
                              tagName: SetLocal
                            ↓SetLocal1 [ngx.components.UIDynamicAction-1727094212125]: 
                              beanData: |
                                '{
                                 "ionBean": "SetLocalAction",
                                 "Property": "plain:baseName",
                                 "Value": "source:{\"filter\":\"Iteration\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1727094212062}],\"path\":\"?.name\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                                }'
                              tagName: SetLocal
                            ↓SetLocal2 [ngx.components.UIDynamicAction-1727094212128]: 
                              beanData: |
                                '{
                                 "ionBean": "SetLocalAction",
                                 "Property": "plain:groupName",
                                 "Value": "source:{\"filter\":\"Iteration\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1727094212062}],\"path\":\"?.group?.name\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                                }'
                              tagName: SetLocal
      ↓tag [ngx.components.UIControlDirective-1727094212131]: 
        directiveName: If
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:local.show
        ↓tag [ngx.components.UIControlDirective-1727094212134]: 
          directiveName: If
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:local.target == 'table' else ElseBlock_1680694395867
          ↓GridColTable [ngx.components.UIDynamicElement-1727094212137]: 
            beanData: '{"ionBean":"GridCol","Size":"plain:8"}'
            tagName: ion-col
            ↓CardContainer [ngx.components.UIDynamicElement-1727094212140]: 
              beanData: '{"ionBean":"Card"}'
              tagName: ion-card
              ↓CardHeader [ngx.components.UIDynamicElement-1727094212143]: 
                beanData: '{"ionBean":"CardHeader"}'
                tagName: ion-card-header
                ↓Div [ngx.components.UIDynamicElement-1727094212146]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1727094212149]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	border-bottom: 1px solid var(--ion-color-dark);
                            	padding:16px;
                            '
                  ↓CardTitle [ngx.components.UIDynamicElement-1727094212152]: 
                    beanData: '{"ionBean":"CardTitle"}'
                    tagName: ion-card-title
                    ↓TextItem [ngx.components.UIDynamicElement-1727094212155]: 
                      beanData: '{"ionBean":"TextItem"}'
                      tagName: ion-text
                      ↓Text [ngx.components.UIText-1727094212158]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Select Columns
                      ↓FontStyle [ngx.components.UIFontStyle-1727094212161]: 
                        fontFamily: Saira
                        fontSize: 24px
                        fontStyle: normal
                        ruleTargets: class1727094212155
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'font-family: Saira;
                                font-size: 24px;
                                font-style: normal;
                                '
                    ↓Style [ngx.components.UIStyle-1727094212164]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	text-align:center;
                              	display: flex;
                                  justify-content: center;
                                  align-items: center;
                              '
                    ↓attr [ngx.components.UIAttribute-1727094212167]: 
                      attrName: '[ngStyle]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'script:{''min-height'': leftTitle.el.clientHeight + ''px''}'
                ↓Style [ngx.components.UIStyle-1727094212170]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	padding: 0;
                          '
                ↓Div1 [ngx.components.UIDynamicElement-1727094212173]: 
                  beanData: '{"ionBean":"DivTag"}'
                  identifier: rightDiv
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1727094212176]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'padding: 0 16px;
                            '
                  ↓GenericItem [ngx.components.UIDynamicElement-1727094212179]: 
                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                    tagName: ion-item
                    ↓Icon [ngx.components.UIDynamicElement-1727094212182]: 
                      beanData: |
                        '{
                         "ionBean": "Icon",
                         "IconName": "plain:information-circle-outline",
                         "IconSlot": "plain:start"
                        }'
                      tagName: ion-icon
                    ↓Label [ngx.components.UIDynamicElement-1727094212185]: 
                      beanData: '{"ionBean":"Label"}'
                      tagName: ion-label
                      ↓Paragraph [ngx.components.UIDynamicElement-1727094212188]: 
                        beanData: '{"ionBean":"Paragraph"}'
                        tagName: p
                        ↓some_text [ngx.components.UIText-1727094212191]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:notice2
                      ↓Style [ngx.components.UIStyle-1727094212194]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '/**
                                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                 * They are set using custom property notation, e.g.: --main-color: black;
                                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                                 * You can find below your component''s properties you can customize within the page.
                                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                 * For more informations see https://ionicframework.com/docs/theming.
                                **/
                                //--color	//Color of the label
                                '
                      ↓FontStyle [ngx.components.UIFontStyle-1727094212197]: 
                        fontStyle: italic
                        ruleTargets: class1727094212185
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'font-style: italic;
                                '
                      ↓class [ngx.components.UIAttribute-1727094212200]: 
                        attrName: 
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:text-wrap
              ↓CardContent [ngx.components.UIDynamicElement-1727094212203]: 
                beanData: '{"ionBean":"CardContent"}'
                tagName: ion-card-content
                ↓ListItem [ngx.components.UIDynamicElement-1727094212206]: 
                  beanData: '{"ionBean":"ListItem"}'
                  tagName: ion-item
                  ↓Icon [ngx.components.UIDynamicElement-1727094212209]: 
                    beanData: |
                      '{
                       "ionBean": "Icon",
                       "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''browsers-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                       "IconSlot": "plain:start"
                      }'
                    tagName: ion-icon
                  ↓Label1 [ngx.components.UIDynamicElement-1727094212212]: 
                    beanData: '{"ionBean":"Label"}'
                    tagName: ion-label
                    ↓some_text [ngx.components.UIText-1727094212215]: 
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'plain: '
                  ↓Grid [ngx.components.UIDynamicElement-1727094212218]: 
                    beanData: '{"ionBean":"Grid"}'
                    tagName: ion-grid
                    ↓GridRow [ngx.components.UIDynamicElement-1727094212221]: 
                      beanData: '{"ionBean":"GridRow","Height":"plain"}'
                      tagName: ion-row
                      ↓GridCol [ngx.components.UIDynamicElement-1727094212224]: 
                        beanData: '{"ionBean":"GridCol"}'
                        tagName: ion-col
                        ↓Attr [ngx.components.UIAttribute-1727094212227]: 
                          attrName: 
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:no-padding
                        ↓GenericItem [ngx.components.UIDynamicElement-1727094212230]: 
                          beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                          tagName: ion-item
                          ↓CheckBox [ngx.components.UIDynamicElement-1727094212233]: 
                            beanData: |
                              '{
                               "ionBean": "CheckBox",
                               "ControlName": "plain:name1667636420064",
                               "Checked": "plain:true"
                              }'
                            tagName: ion-checkbox
                            ↓Style [ngx.components.UIStyle-1727094212236]: 
                              styleContent: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '/**
                                       * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                       * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                       * They are set using custom property notation, e.g.: --main-color: black;
                                       * and are accessed using the var() function, e.g.: color: var(--main-color);
                                       * You can find below your component''s properties you can customize within the page.
                                       * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                       * For more informations see https://ionicframework.com/docs/theming.
                                      **/
                                      //--background	//Background of the checkbox icon
                                      //--background-checked	//Background of the checkbox icon when checked
                                      //--border-color	//Border color of the checkbox icon
                                      //--border-color-checked	//Border color of the checkbox icon when checked
                                      //--border-radius	//Border radius of the checkbox icon
                                      //--border-style	//Border style of the checkbox icon
                                      //--border-width	//Border width of the checkbox icon
                                      //--checkmark-color	//Color of the checkbox checkmark when checked
                                      //--checkmark-width	//Stroke width of the checkbox checkmark
                                      //--size	//Size of the checkbox icon
                                      //--transition	//Transition of the checkbox icon
                                      	margin-top: 2px;
                                      	margin-bottom: 2px;
                                      
                                      '
                            ↓slot [ngx.components.UIAttribute-1727094212239]: 
                              attrName: slot
                              attrValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:start
                            ↓attr [ngx.components.UIControlEvent-1727094212242]: 
                              attrName: (ionChange)
                              eventName: ionChange
                              ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1727094212245]: 
                                actionValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                      →: |
                                        		try {
                                        			for(let i in page.local.selectedColumns){
                                        				page.local.selectedColumns[i].selected = event.detail.checked;
                                        			}
                                        		} catch (e) {
                                        		
                                        		} finally {
                                        			return;
                                        		}
                                        
                          ↓Label [ngx.components.UIDynamicElement-1727094212248]: 
                            beanData: '{"ionBean":"Label"}'
                            tagName: ion-label
                            ↓Paragraph [ngx.components.UIDynamicElement-1727094212251]: 
                              beanData: '{"ionBean":"Paragraph"}'
                              tagName: p
                              ↓some_text [ngx.components.UIText-1727094212254]: 
                                i18n: true
                                textValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:Include
                              ↓Style [ngx.components.UIStyle-1727094212257]: 
                                styleContent: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                      →: |
                                        	color:black;
                                        
                      ↓GridCol1 [ngx.components.UIDynamicElement-1727094212260]: 
                        beanData: '{"ionBean":"GridCol"}'
                        tagName: ion-col
                        ↓Attr [ngx.components.UIAttribute-1727094212263]: 
                          attrName: 
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:no-padding
                        ↓GenericItem [ngx.components.UIDynamicElement-1727094212266]: 
                          beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                          tagName: ion-item
                          ↓Label [ngx.components.UIDynamicElement-1727094212269]: 
                            beanData: '{"ionBean":"Label"}'
                            tagName: ion-label
                            ↓Paragraph [ngx.components.UIDynamicElement-1727094212272]: 
                              beanData: '{"ionBean":"Paragraph"}'
                              tagName: p
                              ↓Style [ngx.components.UIStyle-1727094212275]: 
                                styleContent: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                      →: |
                                        	color:black;
                                        
                              ↓some_text [ngx.components.UIText-1727094212278]: 
                                i18n: true
                                textValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:Hide
                      ↓Style [ngx.components.UIStyle-1727094212281]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	margin-left: -20px;
                                '
                ↓ReorderGroup [ngx.components.UIDynamicElement-1727094212284]: 
                  beanData: '{"ionBean":"ReorderGroup"}'
                  tagName: ion-reorder-group
                  ↓Event [ngx.components.UIControlEvent-1727094212287]: 
                    attrName: (ionItemReorder)
                    eventName: ionItemReorder
                    ↓AckReorder [ngx.components.UICustomAction-1727094212290]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '			page.c8o.log.debug(''[Reorder] Dragged from ''+ event.detail.from  +'' to : ''+ event.detail.to);
                              			
                              			let selectedCols = page.local.selectedColumns;
                              		  	const draggedItem = selectedCols[event.detail.from];
                              		  	
                              			// Reorder the array by moving the item from `from` to `to`
                              			selectedCols.splice(event.detail.from, 1); // Remove item from original position
                              			selectedCols.splice(event.detail.to, 0, draggedItem); // Insert item at new position
                              			
                              			page.local.selectedColumns = selectedCols;
                              			
                              			event.detail.complete();
                              			
                              			resolve(null);
                              '
                  ↓Directive [ngx.components.UIControlDirective-1727094212293]: 
                    directiveIndexName: idx
                    directiveItemName: column
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: source:{"filter":"Sequence","project":"lib_BaseRow","input":"","model":{"data":[{"sequence":"lib_BaseRow.FieldsList","marker":""}],"path":"?.array","prefix":"","suffix":"","custom":"","useCustom":false}}
                    ↓tag [ngx.components.UIControlDirective-1727094212296]: 
                      directiveName: If
                      directiveSource: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:idx == 0
                    ↓ListItem [ngx.components.UIDynamicElement-1727094212299]: 
                      beanData: '{"ionBean":"ListItem"}'
                      tagName: ion-item
                      ↓Directive [ngx.components.UIControlDirective-1727094212302]: 
                        directiveName: Switch
                        directiveSource: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1727094212293}],"path":"?.type","prefix":"","suffix":"","custom":"","useCustom":false}}
                        ↓Directive [ngx.components.UIControlDirective-1727094212305]: 
                          directiveName: SwitchCase
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'text'
                          ↓Icon [ngx.components.UIDynamicElement-1727094212308]: 
                            beanData: |
                              '{
                               "ionBean": "Icon",
                               "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''pencil''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                               "IconSlot": "plain:start"
                              }'
                            tagName: ion-icon
                        ↓Directive1 [ngx.components.UIControlDirective-1727094212311]: 
                          directiveName: SwitchCase
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'long_text'
                          ↓Icon [ngx.components.UIDynamicElement-1727094212314]: 
                            beanData: |
                              '{
                               "ionBean": "Icon",
                               "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''list-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                               "IconSlot": "plain:start"
                              }'
                            tagName: ion-icon
                        ↓Directive2 [ngx.components.UIControlDirective-1727094212317]: 
                          directiveName: SwitchCase
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'formula'
                          ↓Icon [ngx.components.UIDynamicElement-1727094212320]: 
                            beanData: |
                              '{
                               "ionBean": "Icon",
                               "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''logo-electron''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                               "IconSlot": "plain:start"
                              }'
                            tagName: ion-icon
                        ↓Directive3 [ngx.components.UIControlDirective-1727094212323]: 
                          directiveName: SwitchCase
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'boolean'
                          ↓Icon [ngx.components.UIDynamicElement-1727094212326]: 
                            beanData: |
                              '{
                               "ionBean": "Icon",
                               "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''contrast''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                               "IconSlot": "plain:start"
                              }'
                            tagName: ion-icon
                        ↓Directive4 [ngx.components.UIControlDirective-1727094212329]: 
                          directiveName: SwitchCase
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'number'
                          ↓Icon [ngx.components.UIDynamicElement-1727094212332]: 
                            beanData: |
                              '{
                               "ionBean": "Icon",
                               "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''apps-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                               "IconSlot": "plain:start"
                              }'
                            tagName: ion-icon
                        ↓Directive5 [ngx.components.UIControlDirective-1727094212335]: 
                          directiveName: SwitchCase
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'link_row'
                          ↓Icon [ngx.components.UIDynamicElement-1727094212338]: 
                            beanData: |
                              '{
                               "ionBean": "Icon",
                               "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''link-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                               "IconSlot": "plain:start"
                              }'
                            tagName: ion-icon
                        ↓Directive6 [ngx.components.UIControlDirective-1727094212341]: 
                          directiveName: SwitchCase
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'lookup'
                          ↓Icon [ngx.components.UIDynamicElement-1727094212344]: 
                            beanData: |
                              '{
                               "ionBean": "Icon",
                               "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''telescope-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                               "IconSlot": "plain:start"
                              }'
                            tagName: ion-icon
                        ↓Directive8 [ngx.components.UIControlDirective-1727094212347]: 
                          directiveName: SwitchCase
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'file'
                          ↓Icon [ngx.components.UIDynamicElement-1727094212350]: 
                            beanData: |
                              '{
                               "ionBean": "Icon",
                               "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''document-text-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                               "IconSlot": "plain:start"
                              }'
                            tagName: ion-icon
                        ↓Directive9 [ngx.components.UIControlDirective-1727094212353]: 
                          directiveName: SwitchCase
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'date'
                          ↓Icon [ngx.components.UIDynamicElement-1727094212356]: 
                            beanData: |
                              '{
                               "ionBean": "Icon",
                               "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''calendar-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                               "IconSlot": "plain:start"
                              }'
                            tagName: ion-icon
                        ↓Directive10 [ngx.components.UIControlDirective-1727094212359]: 
                          directiveName: SwitchCase
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'multiple_select'
                          ↓Icon [ngx.components.UIDynamicElement-1727094212362]: 
                            beanData: |
                              '{
                               "ionBean": "Icon",
                               "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''reorder-four-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                               "IconSlot": "plain:start"
                              }'
                            tagName: ion-icon
                        ↓Directive7 [ngx.components.UIControlDirective-1727094212365]: 
                          directiveName: SwitchDefault
                          ↓Icon [ngx.components.UIDynamicElement-1727094212368]: 
                            beanData: |
                              '{
                               "ionBean": "Icon",
                               "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''ban''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                               "IconSlot": "plain:start"
                              }'
                            tagName: ion-icon
                      ↓Label1 [ngx.components.UIDynamicElement-1727094212371]: 
                        beanData: '{"ionBean":"Label"}'
                        tagName: ion-label
                        ↓Text [ngx.components.UIText-1727094212374]: 
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1727094212293}],"path":"?.name","prefix":"","suffix":"","custom":"","useCustom":false}}
                        ↓Text1 [ngx.components.UIText-1727094212377]: 
                          isEnabled: false
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1727094212293}],"path":"?.type","prefix":"","suffix":"","custom":"","useCustom":false}}
                      ↓Grid [ngx.components.UIDynamicElement-1727094212380]: 
                        beanData: '{"ionBean":"Grid"}'
                        tagName: ion-grid
                        ↓GridRow [ngx.components.UIDynamicElement-1727094212383]: 
                          beanData: '{"ionBean":"GridRow","Height":"plain"}'
                          tagName: ion-row
                          ↓GridCol [ngx.components.UIDynamicElement-1727094212386]: 
                            beanData: '{"ionBean":"GridCol"}'
                            tagName: ion-col
                            ↓Attr [ngx.components.UIAttribute-1727094212389]: 
                              attrName: 
                              attrValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:no-padding
                            ↓GenericItem [ngx.components.UIDynamicElement-1727094212392]: 
                              beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                              tagName: ion-item
                              ↓CheckBox [ngx.components.UIDynamicElement-1727094212395]: 
                                beanData: |
                                  '{
                                   "ionBean": "CheckBox",
                                   "ControlName": "plain:name1667636420064",
                                   "DoubleBinding": "script:local?.selectedColumns[idx]?.selected"
                                  }'
                                tagName: ion-checkbox
                                ↓Style [ngx.components.UIStyle-1727094212398]: 
                                  styleContent: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          '/**
                                           * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                           * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                           * They are set using custom property notation, e.g.: --main-color: black;
                                           * and are accessed using the var() function, e.g.: color: var(--main-color);
                                           * You can find below your component''s properties you can customize within the page.
                                           * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                           * For more informations see https://ionicframework.com/docs/theming.
                                          **/
                                          //--background	//Background of the checkbox icon
                                          //--background-checked	//Background of the checkbox icon when checked
                                          //--border-color	//Border color of the checkbox icon
                                          //--border-color-checked	//Border color of the checkbox icon when checked
                                          //--border-radius	//Border radius of the checkbox icon
                                          //--border-style	//Border style of the checkbox icon
                                          //--border-width	//Border width of the checkbox icon
                                          //--checkmark-color	//Color of the checkbox checkmark when checked
                                          //--checkmark-width	//Stroke width of the checkbox checkmark
                                          //--size	//Size of the checkbox icon
                                          //--transition	//Transition of the checkbox icon
                                          	margin-top: 2px;
                                          	margin-bottom: 2px;
                                          
                                          '
                                ↓slot [ngx.components.UIAttribute-1727094212401]: 
                                  attrName: slot
                                  attrValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:start
                          ↓GridCol1 [ngx.components.UIDynamicElement-1727094212404]: 
                            beanData: '{"ionBean":"GridCol"}'
                            tagName: ion-col
                            ↓Attr [ngx.components.UIAttribute-1727094212407]: 
                              attrName: 
                              attrValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:no-padding
                            ↓GenericItem [ngx.components.UIDynamicElement-1727094212410]: 
                              beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                              tagName: ion-item
                              ↓CheckBox1 [ngx.components.UIDynamicElement-1727094212413]: 
                                beanData: |
                                  '{
                                   "ionBean": "CheckBox",
                                   "ControlName": "plain:name1667636420064",
                                   "DoubleBinding": "script:local.selectedColumns[idx].hidden",
                                   "Disabled": "script:! local?.selectedColumns[idx]?.selected"
                                  }'
                                tagName: ion-checkbox
                                ↓Style [ngx.components.UIStyle-1727094212416]: 
                                  styleContent: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          '/**
                                           * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                           * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                           * They are set using custom property notation, e.g.: --main-color: black;
                                           * and are accessed using the var() function, e.g.: color: var(--main-color);
                                           * You can find below your component''s properties you can customize within the page.
                                           * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                           * For more informations see https://ionicframework.com/docs/theming.
                                          **/
                                          //--background	//Background of the checkbox icon
                                          //--background-checked	//Background of the checkbox icon when checked
                                          //--border-color	//Border color of the checkbox icon
                                          //--border-color-checked	//Border color of the checkbox icon when checked
                                          //--border-radius	//Border radius of the checkbox icon
                                          //--border-style	//Border style of the checkbox icon
                                          //--border-width	//Border width of the checkbox icon
                                          //--checkmark-color	//Color of the checkbox checkmark when checked
                                          //--checkmark-width	//Stroke width of the checkbox checkmark
                                          //--size	//Size of the checkbox icon
                                          //--transition	//Transition of the checkbox icon
                                          	margin-top: 2px;
                                          	margin-bottom: 2px;
                                          
                                          '
                                ↓slot [ngx.components.UIAttribute-1727094212419]: 
                                  attrName: slot
                                  attrValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:start
                      ↓Reorder [ngx.components.UIDynamicElement-1727094212422]: 
                        beanData: '{"ionBean":"Reorder"}'
                        tagName: ion-reorder
        ↓tag1 [ngx.components.UIElement-1727094212425]: 
          identifier: ElseBlock_1680694395867
          tagName: ng-template
          ↓GridColSelect [ngx.components.UIDynamicElement-1727094212428]: 
            beanData: '{"ionBean":"GridCol","Size":"plain:8"}'
            tagName: ion-col
            ↓CardContainer [ngx.components.UIDynamicElement-1727094212431]: 
              beanData: '{"ionBean":"Card"}'
              tagName: ion-card
              ↓CardHeader [ngx.components.UIDynamicElement-1727094212434]: 
                beanData: '{"ionBean":"CardHeader"}'
                tagName: ion-card-header
                ↓Div [ngx.components.UIDynamicElement-1727094212437]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1727094212440]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	border-bottom: 1px solid var(--ion-color-dark);
                            	padding:16px;
                            '
                  ↓CardTitle [ngx.components.UIDynamicElement-1727094212443]: 
                    beanData: '{"ionBean":"CardTitle"}'
                    tagName: ion-card-title
                    ↓TextItem [ngx.components.UIDynamicElement-1727094212446]: 
                      beanData: '{"ionBean":"TextItem"}'
                      tagName: ion-text
                      ↓Text [ngx.components.UIText-1727094212449]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Select Columns
                      ↓FontStyle [ngx.components.UIFontStyle-1727094212452]: 
                        fontFamily: Saira
                        fontSize: 24px
                        fontStyle: normal
                        ruleTargets: class1727094212446
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'font-family: Saira;
                                font-size: 24px;
                                font-style: normal;
                                '
                    ↓Style [ngx.components.UIStyle-1727094212455]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	text-align:center;
                              	display: flex;
                                  justify-content: center;
                                  align-items: center;
                              '
                    ↓attr [ngx.components.UIAttribute-1727094212458]: 
                      attrName: '[ngStyle]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'script:{''min-height'': leftTitle.el.clientHeight + ''px''}'
                ↓Style [ngx.components.UIStyle-1727094212461]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	padding: 0;
                          '
                ↓Div1 [ngx.components.UIDynamicElement-1727094212464]: 
                  beanData: '{"ionBean":"DivTag"}'
                  identifier: rightDiv
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1727094212467]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'padding: 0 16px;
                            '
                  ↓GenericItem [ngx.components.UIDynamicElement-1727094212470]: 
                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                    tagName: ion-item
                    ↓Icon [ngx.components.UIDynamicElement-1727094212473]: 
                      beanData: |
                        '{
                         "ionBean": "Icon",
                         "IconName": "plain:information-circle-outline",
                         "IconSlot": "plain:start"
                        }'
                      tagName: ion-icon
                    ↓Label [ngx.components.UIDynamicElement-1727094212476]: 
                      beanData: '{"ionBean":"Label"}'
                      tagName: ion-label
                      ↓Paragraph [ngx.components.UIDynamicElement-1727094212479]: 
                        beanData: '{"ionBean":"Paragraph"}'
                        tagName: p
                        ↓some_text [ngx.components.UIText-1727094212482]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:notice3
                      ↓Style [ngx.components.UIStyle-1727094212485]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '/**
                                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                 * They are set using custom property notation, e.g.: --main-color: black;
                                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                                 * You can find below your component''s properties you can customize within the page.
                                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                 * For more informations see https://ionicframework.com/docs/theming.
                                **/
                                //--color	//Color of the label
                                '
                      ↓FontStyle [ngx.components.UIFontStyle-1727094212488]: 
                        fontStyle: italic
                        ruleTargets: class1727094212476
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'font-style: italic;
                                '
                      ↓class [ngx.components.UIAttribute-1727094212491]: 
                        attrName: 
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:text-wrap
              ↓CardContent [ngx.components.UIDynamicElement-1727094212494]: 
                beanData: '{"ionBean":"CardContent"}'
                tagName: ion-card-content
                ↓GenericItemDisplayValue [ngx.components.UIDynamicElement-1727094212497]: 
                  beanData: '{"ionBean":"GenericItem"}'
                  isEnabled: false
                  tagName: ion-item
                  ↓Label [ngx.components.UIDynamicElement-1727094212500]: 
                    beanData: '{"ionBean":"Label"}'
                    tagName: ion-label
                    ↓some_text [ngx.components.UIText-1727094212503]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Display value
                  ↓SelectContainer [ngx.components.UIDynamicElement-1727094212506]: 
                    beanData: |
                      '{
                       "ionBean": "Select",
                       "ControlName": "plain:name1680695926472",
                       "DoubleBinding": "source:{\"filter\":\"Local\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"localObject\":\"local\"}],\"path\":\"?.displayColumn\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                       "Interface": "plain:popover"
                      }'
                    tagName: ion-select
                    ↓Directive [ngx.components.UIControlDirective-1727094212509]: 
                      directiveIndexName: idx
                      directiveItemName: column
                      directiveSource: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: source:{"filter":"Sequence","project":"lib_BaseRow","input":"","model":{"data":[{"sequence":"lib_BaseRow.FieldsList","marker":""}],"path":"?.array","prefix":"","suffix":"","custom":"","useCustom":false}}
                      ↓SelectOption [ngx.components.UIDynamicElement-1727094212512]: 
                        beanData: '{"ionBean":"SelectOption","Value":"script:column.name"}'
                        tagName: ion-select-option
                        ↓GenericItem [ngx.components.UIDynamicElement-1727094212515]: 
                          beanData: '{"ionBean":"GenericItem"}'
                          tagName: ion-item
                          ↓Directive [ngx.components.UIControlDirective-1727094212518]: 
                            directiveName: Switch
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1727094212509}],"path":"?.type","prefix":"","suffix":"","custom":"","useCustom":false}}
                            isEnabled: false
                            ↓Directive [ngx.components.UIControlDirective-1727094212521]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'text'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212524]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''pencil''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive1 [ngx.components.UIControlDirective-1727094212527]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'long_text'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212530]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''list-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive2 [ngx.components.UIControlDirective-1727094212533]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'formula'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212536]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''logo-electron''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive3 [ngx.components.UIControlDirective-1727094212539]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'boolean'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212542]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''contrast''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive4 [ngx.components.UIControlDirective-1727094212545]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'number'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212548]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''apps-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive5 [ngx.components.UIControlDirective-1727094212551]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'link_row'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212554]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''link-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive6 [ngx.components.UIControlDirective-1727094212557]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'lookup'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212560]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''telescope-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive8 [ngx.components.UIControlDirective-1727094212563]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'file'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212566]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''document-text-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive9 [ngx.components.UIControlDirective-1727094212569]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'date'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212572]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''calendar-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive10 [ngx.components.UIControlDirective-1727094212575]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'multiple_select'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212578]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''reorder-four-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive7 [ngx.components.UIControlDirective-1727094212581]: 
                              directiveName: SwitchDefault
                              ↓Icon [ngx.components.UIDynamicElement-1727094212584]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''ban''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                          ↓Label [ngx.components.UIDynamicElement-1727094212587]: 
                            beanData: '{"ionBean":"Label"}'
                            tagName: ion-label
                            ↓Text [ngx.components.UIText-1727094212590]: 
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1727094212509}],"path":"?.name","prefix":"","suffix":"","custom":"","useCustom":false}}
                    ↓attr [ngx.components.UIControlEvent-1727094212593]: 
                      attrName: (ngModelChange)
                      eventName: (ngModelChange)
                      ↓affectValue [ngx.components.UICustomAsyncAction-1727094212596]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		try {
                                			if(!page.local.diffrentVals){
                                				page.local.valueColumn = event;
                                			}
                                		} catch (e) {
                                		
                                		} finally {
                                			return;
                                		}
                                
                ↓GenericItemDiffrentVals [ngx.components.UIDynamicElement-1727094212599]: 
                  beanData: '{"ionBean":"GenericItem","Lines":"plain:full"}'
                  isEnabled: false
                  tagName: ion-item
                  ↓CheckBox [ngx.components.UIDynamicElement-1727094212602]: 
                    beanData: |
                      '{
                       "ionBean": "CheckBox",
                       "ControlName": "plain:name1680697025062",
                       "DoubleBinding": "script:local.diffrentVals"
                      }'
                    tagName: ion-checkbox
                    ↓slot [ngx.components.UIAttribute-1727094212605]: 
                      attrName: slot
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:start
                    ↓attr [ngx.components.UIControlEvent-1727094212608]: 
                      attrName: (ngModelChange)
                      eventName: (ngModelChange)
                      ↓affectValue [ngx.components.UICustomAsyncAction-1727094212611]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		try {
                                			if(event == false){
                                				page.local.valueColumn = page.local.displayColumn;
                                			}
                                		} catch (e) {
                                		
                                		} finally {
                                			return;
                                		}
                                
                  ↓Label [ngx.components.UIDynamicElement-1727094212614]: 
                    beanData: '{"ionBean":"Label"}'
                    tagName: ion-label
                    ↓some_text [ngx.components.UIText-1727094212617]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Use a different column for the value and the display value
                ↓GenericItemValue [ngx.components.UIDynamicElement-1727094212620]: 
                  beanData: '{"ionBean":"GenericItem","Disabled":"script:local.diffrentVals == false"}'
                  isEnabled: false
                  tagName: ion-item
                  ↓Label [ngx.components.UIDynamicElement-1727094212623]: 
                    beanData: '{"ionBean":"Label"}'
                    tagName: ion-label
                    ↓some_text [ngx.components.UIText-1727094212626]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Value
                  ↓SelectContainer [ngx.components.UIDynamicElement-1727094212629]: 
                    beanData: |
                      '{
                       "ionBean": "Select",
                       "ControlName": "plain:name1680695926472",
                       "DoubleBinding": "source:{\"filter\":\"Local\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"localObject\":\"local\"}],\"path\":\"?.valueColumn\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                       "Interface": "plain:popover"
                      }'
                    tagName: ion-select
                    ↓Directive [ngx.components.UIControlDirective-1727094212632]: 
                      directiveIndexName: idx
                      directiveItemName: column
                      directiveSource: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: source:{"filter":"Sequence","project":"lib_BaseRow","input":"","model":{"data":[{"sequence":"lib_BaseRow.FieldsList","marker":""}],"path":"?.array","prefix":"","suffix":"","custom":"","useCustom":false}}
                      ↓SelectOption [ngx.components.UIDynamicElement-1727094212635]: 
                        beanData: '{"ionBean":"SelectOption","Value":"script:JSON.stringify(column)"}'
                        tagName: ion-select-option
                        ↓GenericItem [ngx.components.UIDynamicElement-1727094212638]: 
                          beanData: '{"ionBean":"GenericItem"}'
                          tagName: ion-item
                          ↓Directive [ngx.components.UIControlDirective-1727094212641]: 
                            directiveName: Switch
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1727094212632}],"path":"?.type","prefix":"","suffix":"","custom":"","useCustom":false}}
                            isEnabled: false
                            ↓Directive [ngx.components.UIControlDirective-1727094212644]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'text'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212647]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''pencil''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive1 [ngx.components.UIControlDirective-1727094212650]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'long_text'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212653]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''list-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive2 [ngx.components.UIControlDirective-1727094212656]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'formula'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212659]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''logo-electron''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive3 [ngx.components.UIControlDirective-1727094212662]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'boolean'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212665]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''contrast''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive4 [ngx.components.UIControlDirective-1727094212668]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'number'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212671]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''apps-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive5 [ngx.components.UIControlDirective-1727094212674]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'link_row'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212677]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''link-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive6 [ngx.components.UIControlDirective-1727094212680]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'lookup'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212683]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''telescope-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive8 [ngx.components.UIControlDirective-1727094212686]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'file'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212689]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''document-text-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive9 [ngx.components.UIControlDirective-1727094212692]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'date'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212695]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''calendar-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive10 [ngx.components.UIControlDirective-1727094212698]: 
                              directiveName: SwitchCase
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'multiple_select'
                              ↓Icon [ngx.components.UIDynamicElement-1727094212701]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''reorder-four-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                            ↓Directive7 [ngx.components.UIControlDirective-1727094212704]: 
                              directiveName: SwitchDefault
                              ↓Icon [ngx.components.UIDynamicElement-1727094212707]: 
                                beanData: |
                                  '{
                                   "ionBean": "Icon",
                                   "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''ban''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                   "IconSlot": "plain:start"
                                  }'
                                tagName: ion-icon
                          ↓Label [ngx.components.UIDynamicElement-1727094212710]: 
                            beanData: '{"ionBean":"Label"}'
                            tagName: ion-label
                            ↓Text [ngx.components.UIText-1727094212713]: 
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1727094212632}],"path":"?.name","prefix":"","suffix":"","custom":"","useCustom":false}}
                ↓RadioGroup [ngx.components.UIDynamicElement-1727094212716]: 
                  beanData: '{"ionBean":"RadioGroup","ControlName":"plain:name1680708184852"}'
                  tagName: ion-radio-group
                  ↓ReorderGroup [ngx.components.UIDynamicElement-1727094212719]: 
                    beanData: '{"ionBean":"ReorderGroup"}'
                    tagName: ion-reorder-group
                    ↓Directive [ngx.components.UIControlDirective-1727094212722]: 
                      directiveIndexName: idx
                      directiveItemName: column
                      directiveSource: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: source:{"filter":"Sequence","project":"lib_BaseRow","input":"","model":{"data":[{"sequence":"lib_BaseRow.FieldsList","marker":""}],"path":"?.array","prefix":"","suffix":"","custom":"","useCustom":false}}
                      ↓tag [ngx.components.UIControlDirective-1727094212725]: 
                        directiveName: If
                        directiveSource: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:idx == 0
                        ↓ListItemHeader [ngx.components.UIDynamicElement-1727094212728]: 
                          beanData: '{"ionBean":"ListItem"}'
                          tagName: ion-item
                          ↓Icon [ngx.components.UIDynamicElement-1727094212731]: 
                            beanData: |
                              '{
                               "ionBean": "Icon",
                               "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''browsers-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                               "IconSlot": "plain:start"
                              }'
                            tagName: ion-icon
                          ↓Label1 [ngx.components.UIDynamicElement-1727094212734]: 
                            beanData: '{"ionBean":"Label"}'
                            tagName: ion-label
                            ↓some_text [ngx.components.UIText-1727094212737]: 
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: 'plain: '
                          ↓Grid [ngx.components.UIDynamicElement-1727094212740]: 
                            beanData: '{"ionBean":"Grid"}'
                            tagName: ion-grid
                            ↓GridRow [ngx.components.UIDynamicElement-1727094212743]: 
                              beanData: '{"ionBean":"GridRow","Height":"plain"}'
                              tagName: ion-row
                              ↓GridCol [ngx.components.UIDynamicElement-1727094212746]: 
                                beanData: '{"ionBean":"GridCol"}'
                                tagName: ion-col
                                ↓Attr [ngx.components.UIAttribute-1727094212749]: 
                                  attrName: 
                                  attrValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:no-padding
                                ↓GenericItem [ngx.components.UIDynamicElement-1727094212752]: 
                                  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                  tagName: ion-item
                                  ↓CheckBox [ngx.components.UIDynamicElement-1727094212755]: 
                                    beanData: |
                                      '{
                                       "ionBean": "CheckBox",
                                       "ControlName": "plain:name1667636420064",
                                       "Checked": "plain:true"
                                      }'
                                    tagName: ion-checkbox
                                    ↓Style [ngx.components.UIStyle-1727094212758]: 
                                      styleContent: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                            →: |
                                              '/**
                                               * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                               * They are set using custom property notation, e.g.: --main-color: black;
                                               * and are accessed using the var() function, e.g.: color: var(--main-color);
                                               * You can find below your component''s properties you can customize within the page.
                                               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                               * For more informations see https://ionicframework.com/docs/theming.
                                              **/
                                              //--background	//Background of the checkbox icon
                                              //--background-checked	//Background of the checkbox icon when checked
                                              //--border-color	//Border color of the checkbox icon
                                              //--border-color-checked	//Border color of the checkbox icon when checked
                                              //--border-radius	//Border radius of the checkbox icon
                                              //--border-style	//Border style of the checkbox icon
                                              //--border-width	//Border width of the checkbox icon
                                              //--checkmark-color	//Color of the checkbox checkmark when checked
                                              //--checkmark-width	//Stroke width of the checkbox checkmark
                                              //--size	//Size of the checkbox icon
                                              //--transition	//Transition of the checkbox icon
                                              	margin-top: 2px;
                                              	margin-bottom: 2px;
                                              
                                              '
                                    ↓slot [ngx.components.UIAttribute-1727094212761]: 
                                      attrName: slot
                                      attrValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                          - MobileSmartSourceType: plain:start
                                    ↓attr [ngx.components.UIControlEvent-1727094212764]: 
                                      attrName: (ionChange)
                                      eventName: ionChange
                                      ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1727094212767]: 
                                        actionValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                		try {
                                                			for(let i in page.local.selectedColumns){
                                                				page.local.selectedColumns[i].selected = event.detail.checked;
                                                				if(!(event.detail.checked)){
                                                					page.local.selectedColumns[i].displayValue = event.detail.checked;
                                                					page.local.selectedColumns[i].value =  event.detail.checked;;
                                                				}
                                                			}
                                                			if(!(event.detail.checked)){
                                                				page.local.selectedColumns["id"].value = true;
                                                				page.local.selectedColumns["id"].displayValue = true;
                                                				page.local.selectedColumns["id"].selected = true;
                                                			}
                                                		} catch (e) {
                                                		
                                                		} finally {
                                                			return;
                                                		}
                                                
                                  ↓Label [ngx.components.UIDynamicElement-1727094212770]: 
                                    beanData: '{"ionBean":"Label"}'
                                    tagName: ion-label
                                    ↓Paragraph [ngx.components.UIDynamicElement-1727094212773]: 
                                      beanData: '{"ionBean":"Paragraph"}'
                                      tagName: p
                                      ↓some_text [ngx.components.UIText-1727094212776]: 
                                        i18n: true
                                        textValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: plain:Include
                                      ↓Style [ngx.components.UIStyle-1727094212779]: 
                                        styleContent: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                	color:black;
                                                
                              ↓GridCol1 [ngx.components.UIDynamicElement-1727094212782]: 
                                beanData: '{"ionBean":"GridCol"}'
                                tagName: ion-col
                                ↓Attr [ngx.components.UIAttribute-1727094212785]: 
                                  attrName: 
                                  attrValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:no-padding
                                ↓GenericItem [ngx.components.UIDynamicElement-1727094212788]: 
                                  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                  tagName: ion-item
                                  ↓Label [ngx.components.UIDynamicElement-1727094212791]: 
                                    beanData: '{"ionBean":"Label"}'
                                    tagName: ion-label
                                    ↓Paragraph [ngx.components.UIDynamicElement-1727094212794]: 
                                      beanData: '{"ionBean":"Paragraph"}'
                                      tagName: p
                                      ↓Style [ngx.components.UIStyle-1727094212797]: 
                                        styleContent: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                	color:black;
                                                
                                      ↓some_text [ngx.components.UIText-1727094212800]: 
                                        i18n: true
                                        textValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: plain:Display value
                              ↓GridCol2 [ngx.components.UIDynamicElement-1727094212803]: 
                                beanData: '{"ionBean":"GridCol"}'
                                tagName: ion-col
                                ↓Attr [ngx.components.UIAttribute-1727094212806]: 
                                  attrName: 
                                  attrValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:no-padding
                                ↓GenericItem [ngx.components.UIDynamicElement-1727094212809]: 
                                  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                  tagName: ion-item
                                  ↓Label [ngx.components.UIDynamicElement-1727094212812]: 
                                    beanData: '{"ionBean":"Label"}'
                                    tagName: ion-label
                                    ↓Paragraph [ngx.components.UIDynamicElement-1727094212815]: 
                                      beanData: '{"ionBean":"Paragraph"}'
                                      tagName: p
                                      ↓Style [ngx.components.UIStyle-1727094212818]: 
                                        styleContent: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                	color:black;
                                                
                                      ↓some_text [ngx.components.UIText-1727094212821]: 
                                        i18n: true
                                        textValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: plain:Value
                        ↓ListItemIdentifier [ngx.components.UIDynamicElement-1727094212824]: 
                          beanData: '{"ionBean":"ListItem"}'
                          tagName: ion-item
                          ↓Icon [ngx.components.UIDynamicElement-1727094212827]: 
                            beanData: |
                              '{
                               "ionBean": "Icon",
                               "IconName": "plain:cog-outline",
                               "IconSlot": "plain:start"
                              }'
                            tagName: ion-icon
                          ↓Label1 [ngx.components.UIDynamicElement-1727094212830]: 
                            beanData: '{"ionBean":"Label"}'
                            tagName: ion-label
                            ↓some_text [ngx.components.UIText-1727094212833]: 
                              i18n: true
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:Identifier
                          ↓Grid [ngx.components.UIDynamicElement-1727094212836]: 
                            beanData: '{"ionBean":"Grid"}'
                            tagName: ion-grid
                            ↓GridRow [ngx.components.UIDynamicElement-1727094212839]: 
                              beanData: '{"ionBean":"GridRow","Height":"plain"}'
                              tagName: ion-row
                              ↓GridCol [ngx.components.UIDynamicElement-1727094212842]: 
                                beanData: '{"ionBean":"GridCol"}'
                                tagName: ion-col
                                ↓Attr [ngx.components.UIAttribute-1727094212845]: 
                                  attrName: 
                                  attrValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:no-padding
                                ↓GenericItem [ngx.components.UIDynamicElement-1727094212848]: 
                                  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                  tagName: ion-item
                                  ↓CheckBox [ngx.components.UIDynamicElement-1727094212851]: 
                                    beanData: |
                                      '{
                                       "ionBean": "CheckBox",
                                       "ControlName": "plain:name1667636420064",
                                       "DoubleBinding": "script:local?.selectedColumns[''id'']?.selected",
                                       "Disabled": "plain:true",
                                       "Checked": "plain:true"
                                      }'
                                    tagName: ion-checkbox
                                    ↓Style [ngx.components.UIStyle-1727094212854]: 
                                      styleContent: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                            →: |
                                              '/**
                                               * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                               * They are set using custom property notation, e.g.: --main-color: black;
                                               * and are accessed using the var() function, e.g.: color: var(--main-color);
                                               * You can find below your component''s properties you can customize within the page.
                                               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                               * For more informations see https://ionicframework.com/docs/theming.
                                              **/
                                              //--background	//Background of the checkbox icon
                                              //--background-checked	//Background of the checkbox icon when checked
                                              //--border-color	//Border color of the checkbox icon
                                              //--border-color-checked	//Border color of the checkbox icon when checked
                                              //--border-radius	//Border radius of the checkbox icon
                                              //--border-style	//Border style of the checkbox icon
                                              //--border-width	//Border width of the checkbox icon
                                              //--checkmark-color	//Color of the checkbox checkmark when checked
                                              //--checkmark-width	//Stroke width of the checkbox checkmark
                                              //--size	//Size of the checkbox icon
                                              //--transition	//Transition of the checkbox icon
                                              	margin-top: 2px;
                                              	margin-bottom: 2px;
                                              	pointer-events: none;
                                              	opacity: 1;
                                              
                                              '
                                    ↓slot [ngx.components.UIAttribute-1727094212857]: 
                                      attrName: slot
                                      attrValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                          - MobileSmartSourceType: plain:start
                                    ↓attr [ngx.components.UIControlEvent-1727094212860]: 
                                      attrName: (ionChange)
                                      eventName: ionChange
                                      ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1727094212863]: 
                                        actionValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                		try {
                                                			for(let i in page.local.selectedColumns){
                                                				page.local.selectedColumns[i].selected = event.detail.checked;
                                                			}
                                                		} catch (e) {
                                                		
                                                		} finally {
                                                			return;
                                                		}
                                                
                                        isEnabled: false
                              ↓GridCol1 [ngx.components.UIDynamicElement-1727094212866]: 
                                beanData: '{"ionBean":"GridCol"}'
                                tagName: ion-col
                                ↓Attr [ngx.components.UIAttribute-1727094212869]: 
                                  attrName: 
                                  attrValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:no-padding
                                ↓GenericItem1 [ngx.components.UIDynamicElement-1727094212872]: 
                                  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                  tagName: ion-item
                                  ↓CheckBox [ngx.components.UIDynamicElement-1727094212875]: 
                                    beanData: |
                                      '{
                                       "ionBean": "CheckBox",
                                       "ControlName": "plain:name1667636420064",
                                       "DoubleBinding": "script:local.selectedColumns[''id''].displayValue",
                                       "IonMode": "plain:ios",
                                       "Checked": "plain:true"
                                      }'
                                    tagName: ion-checkbox
                                    ↓Style [ngx.components.UIStyle-1727094212878]: 
                                      styleContent: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                            →: |
                                              '/**
                                               * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                               * They are set using custom property notation, e.g.: --main-color: black;
                                               * and are accessed using the var() function, e.g.: color: var(--main-color);
                                               * You can find below your component''s properties you can customize within the page.
                                               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                               * For more informations see https://ionicframework.com/docs/theming.
                                              **/
                                              //--background	//Background of the checkbox icon
                                              //--background-checked	//Background of the checkbox icon when checked
                                              //--border-color	//Border color of the checkbox icon
                                              //--border-color-checked	//Border color of the checkbox icon when checked
                                              //--border-radius	//Border radius of the checkbox icon
                                              //--border-style	//Border style of the checkbox icon
                                              //--border-width	//Border width of the checkbox icon
                                              //--checkmark-color	//Color of the checkbox checkmark when checked
                                              //--checkmark-width	//Stroke width of the checkbox checkmark
                                              //--size	//Size of the checkbox icon
                                              //--transition	//Transition of the checkbox icon
                                              	margin-top: 2px;
                                              	margin-bottom: 2px;
                                              
                                              '
                                    ↓slot [ngx.components.UIAttribute-1727094212881]: 
                                      attrName: slot
                                      attrValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                          - MobileSmartSourceType: plain:start
                                    ↓attr [ngx.components.UIControlEvent-1727094212884]: 
                                      attrName: (ngModelChange)
                                      eventName: (ngModelChange)
                                      ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1727094212887]: 
                                        actionValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                		try {
                                                				for(let i in page.local.selectedColumns){
                                                					if(i == vars.id){
                                                						//page.local.selectedColumns[i].displayValue = true;
                                                					}
                                                					else{
                                                						page.local.selectedColumns[i].displayValue = false;
                                                					}
                                                				}
                                                		} catch (e) {
                                                		
                                                		} finally {
                                                			return;
                                                		}
                                                
                                        ↓id [ngx.components.UIControlVariable-1727094212890]: 
                                          varValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                              - MobileSmartSourceType: script:'id'
                              ↓GridCol2 [ngx.components.UIDynamicElement-1727094212893]: 
                                beanData: '{"ionBean":"GridCol"}'
                                tagName: ion-col
                                ↓Attr [ngx.components.UIAttribute-1727094212896]: 
                                  attrName: 
                                  attrValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:no-padding
                                ↓GenericItem1 [ngx.components.UIDynamicElement-1727094212899]: 
                                  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                  tagName: ion-item
                                  ↓CheckBox [ngx.components.UIDynamicElement-1727094212902]: 
                                    beanData: |
                                      '{
                                       "ionBean": "CheckBox",
                                       "ControlName": "plain:name1667636420064",
                                       "DoubleBinding": "script:local.selectedColumns[''id''].value",
                                       "IonMode": "plain:ios",
                                       "Checked": "plain:true"
                                      }'
                                    tagName: ion-checkbox
                                    ↓Style [ngx.components.UIStyle-1727094212905]: 
                                      styleContent: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                            →: |
                                              '/**
                                               * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                               * They are set using custom property notation, e.g.: --main-color: black;
                                               * and are accessed using the var() function, e.g.: color: var(--main-color);
                                               * You can find below your component''s properties you can customize within the page.
                                               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                               * For more informations see https://ionicframework.com/docs/theming.
                                              **/
                                              //--background	//Background of the checkbox icon
                                              //--background-checked	//Background of the checkbox icon when checked
                                              //--border-color	//Border color of the checkbox icon
                                              //--border-color-checked	//Border color of the checkbox icon when checked
                                              //--border-radius	//Border radius of the checkbox icon
                                              //--border-style	//Border style of the checkbox icon
                                              //--border-width	//Border width of the checkbox icon
                                              //--checkmark-color	//Color of the checkbox checkmark when checked
                                              //--checkmark-width	//Stroke width of the checkbox checkmark
                                              //--size	//Size of the checkbox icon
                                              //--transition	//Transition of the checkbox icon
                                              	margin-top: 2px;
                                              	margin-bottom: 2px;
                                              
                                              '
                                    ↓slot [ngx.components.UIAttribute-1727094212908]: 
                                      attrName: slot
                                      attrValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                          - MobileSmartSourceType: plain:start
                                    ↓attr [ngx.components.UIControlEvent-1727094212911]: 
                                      attrName: (ngModelChange)
                                      eventName: (ngModelChange)
                                      ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1727094212914]: 
                                        actionValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                              →: |
                                                		try {
                                                				for(let i in page.local.selectedColumns){
                                                					if(i == vars.id){
                                                						
                                                					}
                                                					else{
                                                						page.local.selectedColumns[i].value = false;
                                                					}
                                                				}
                                                		} catch (e) {
                                                		
                                                		} finally {
                                                			return;
                                                		}
                                                
                                        ↓id [ngx.components.UIControlVariable-1727094212917]: 
                                          varValue: 
                                            - xmlizable: 
                                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                              - MobileSmartSourceType: script:'id'
                      ↓ListItem [ngx.components.UIDynamicElement-1727094212920]: 
                        beanData: '{"ionBean":"ListItem"}'
                        tagName: ion-item
                        ↓Directive [ngx.components.UIControlDirective-1727094212923]: 
                          directiveName: Switch
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1727094212722}],"path":"?.type","prefix":"","suffix":"","custom":"","useCustom":false}}
                          ↓Directive [ngx.components.UIControlDirective-1727094212926]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'text'
                            ↓Icon [ngx.components.UIDynamicElement-1727094212929]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''pencil''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive1 [ngx.components.UIControlDirective-1727094212932]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'long_text'
                            ↓Icon [ngx.components.UIDynamicElement-1727094212935]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''list-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive2 [ngx.components.UIControlDirective-1727094212938]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'formula'
                            ↓Icon [ngx.components.UIDynamicElement-1727094212941]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''logo-electron''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive3 [ngx.components.UIControlDirective-1727094212944]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'boolean'
                            ↓Icon [ngx.components.UIDynamicElement-1727094212947]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''contrast''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive4 [ngx.components.UIControlDirective-1727094212950]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'number'
                            ↓Icon [ngx.components.UIDynamicElement-1727094212953]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''apps-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive5 [ngx.components.UIControlDirective-1727094212956]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'link_row'
                            ↓Icon [ngx.components.UIDynamicElement-1727094212959]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''link-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive6 [ngx.components.UIControlDirective-1727094212962]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'lookup'
                            ↓Icon [ngx.components.UIDynamicElement-1727094212965]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''telescope-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive8 [ngx.components.UIControlDirective-1727094212968]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'file'
                            ↓Icon [ngx.components.UIDynamicElement-1727094212971]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''document-text-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive9 [ngx.components.UIControlDirective-1727094212974]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'date'
                            ↓Icon [ngx.components.UIDynamicElement-1727094212977]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''calendar-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive10 [ngx.components.UIControlDirective-1727094212980]: 
                            directiveName: SwitchCase
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'multiple_select'
                            ↓Icon [ngx.components.UIDynamicElement-1727094212983]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''reorder-four-outline''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                          ↓Directive7 [ngx.components.UIControlDirective-1727094212986]: 
                            directiveName: SwitchDefault
                            ↓Icon [ngx.components.UIDynamicElement-1727094212989]: 
                              beanData: |
                                '{
                                 "ionBean": "Icon",
                                 "IconName": "source:{\"filter\":\"Icon\",\"project\":\"lib_BaseRow\",\"input\":\"\",\"model\":{\"data\":[{\"icon\":\"''ban''\"}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                                 "IconSlot": "plain:start"
                                }'
                              tagName: ion-icon
                        ↓Label1 [ngx.components.UIDynamicElement-1727094212992]: 
                          beanData: '{"ionBean":"Label"}'
                          tagName: ion-label
                          ↓Text [ngx.components.UIText-1727094212995]: 
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1727094212722}],"path":"?.name","prefix":"","suffix":"","custom":"","useCustom":false}}
                          ↓Text1 [ngx.components.UIText-1727094212998]: 
                            isEnabled: false
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: source:{"filter":"Iteration","project":"lib_BaseRow","input":"","model":{"data":[{"priority":1727094212293}],"path":"?.type","prefix":"","suffix":"","custom":"","useCustom":false}}
                        ↓Grid [ngx.components.UIDynamicElement-1727094213001]: 
                          beanData: '{"ionBean":"Grid"}'
                          tagName: ion-grid
                          ↓GridRow [ngx.components.UIDynamicElement-1727094213004]: 
                            beanData: '{"ionBean":"GridRow","Height":"plain"}'
                            tagName: ion-row
                            ↓GridColInclude [ngx.components.UIDynamicElement-1727094213007]: 
                              beanData: '{"ionBean":"GridCol"}'
                              tagName: ion-col
                              ↓Attr [ngx.components.UIAttribute-1727094213010]: 
                                attrName: 
                                attrValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:no-padding
                              ↓GenericItem [ngx.components.UIDynamicElement-1727094213013]: 
                                beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                tagName: ion-item
                                ↓CheckBox [ngx.components.UIDynamicElement-1727094213016]: 
                                  beanData: |
                                    '{
                                     "ionBean": "CheckBox",
                                     "ControlName": "plain:name1667636420064",
                                     "DoubleBinding": "script:local?.selectedColumns[column.name]?.selected"
                                    }'
                                  tagName: ion-checkbox
                                  ↓Style [ngx.components.UIStyle-1727094213019]: 
                                    styleContent: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                          →: |
                                            '/**
                                             * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                             * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                             * They are set using custom property notation, e.g.: --main-color: black;
                                             * and are accessed using the var() function, e.g.: color: var(--main-color);
                                             * You can find below your component''s properties you can customize within the page.
                                             * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                             * For more informations see https://ionicframework.com/docs/theming.
                                            **/
                                            //--background	//Background of the checkbox icon
                                            //--background-checked	//Background of the checkbox icon when checked
                                            //--border-color	//Border color of the checkbox icon
                                            //--border-color-checked	//Border color of the checkbox icon when checked
                                            //--border-radius	//Border radius of the checkbox icon
                                            //--border-style	//Border style of the checkbox icon
                                            //--border-width	//Border width of the checkbox icon
                                            //--checkmark-color	//Color of the checkbox checkmark when checked
                                            //--checkmark-width	//Stroke width of the checkbox checkmark
                                            //--size	//Size of the checkbox icon
                                            //--transition	//Transition of the checkbox icon
                                            	margin-top: 2px;
                                            	margin-bottom: 2px;
                                            
                                            '
                                  ↓slot [ngx.components.UIAttribute-1727094213022]: 
                                    attrName: slot
                                    attrValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: plain:start
                                  ↓attr [ngx.components.UIControlEvent-1727094213025]: 
                                    attrName: (ngModelChange)
                                    eventName: (ngModelChange)
                                    ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1727094213028]: 
                                      actionValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                            →: |
                                              		try {
                                              			if(page.local.selectedColumns[vars.id].displayValue == true){
                                              				page.local.selectedColumns[vars.id].displayValue = false;
                                              				page.local.selectedColumns["id"].displayValue = true;
                                              			}
                                              			if(page.local.selectedColumns[vars.id].value == true){
                                              				page.local.selectedColumns[vars.id].value = false;
                                              				page.local.selectedColumns["id"].value = true;
                                              			}
                                              		} catch (e) {
                                              		
                                              		} finally {
                                              			return;
                                              		}
                                              
                                      ↓id [ngx.components.UIControlVariable-1727094213031]: 
                                        varValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: script:column.name
                            ↓GridColDisplayValue [ngx.components.UIDynamicElement-1727094213034]: 
                              beanData: '{"ionBean":"GridCol"}'
                              tagName: ion-col
                              ↓Attr [ngx.components.UIAttribute-1727094213037]: 
                                attrName: 
                                attrValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:no-padding
                              ↓GenericItem [ngx.components.UIDynamicElement-1727094213040]: 
                                beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                tagName: ion-item
                                ↓CheckBox1 [ngx.components.UIDynamicElement-1727094213043]: 
                                  beanData: |
                                    '{
                                     "ionBean": "CheckBox",
                                     "ControlName": "plain:name1667636420064",
                                     "DoubleBinding": "script:local.selectedColumns[column.name].displayValue",
                                     "Disabled": "script:(! local?.selectedColumns[column.name]?.selected )",
                                     "IonMode": "plain:ios"
                                    }'
                                  tagName: ion-checkbox
                                  ↓Style [ngx.components.UIStyle-1727094213046]: 
                                    styleContent: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                          →: |
                                            '/**
                                             * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                             * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                             * They are set using custom property notation, e.g.: --main-color: black;
                                             * and are accessed using the var() function, e.g.: color: var(--main-color);
                                             * You can find below your component''s properties you can customize within the page.
                                             * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                             * For more informations see https://ionicframework.com/docs/theming.
                                            **/
                                            //--background	//Background of the checkbox icon
                                            //--background-checked	//Background of the checkbox icon when checked
                                            //--border-color	//Border color of the checkbox icon
                                            //--border-color-checked	//Border color of the checkbox icon when checked
                                            //--border-radius	//Border radius of the checkbox icon
                                            //--border-style	//Border style of the checkbox icon
                                            //--border-width	//Border width of the checkbox icon
                                            //--checkmark-color	//Color of the checkbox checkmark when checked
                                            //--checkmark-width	//Stroke width of the checkbox checkmark
                                            //--size	//Size of the checkbox icon
                                            //--transition	//Transition of the checkbox icon
                                            	margin-top: 2px;
                                            	margin-bottom: 2px;
                                            	--opacity:1 !important;
                                            '
                                  ↓slot [ngx.components.UIAttribute-1727094213049]: 
                                    attrName: slot
                                    attrValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: plain:start
                                  ↓attr [ngx.components.UIControlEvent-1727094213052]: 
                                    attrName: (ngModelChange)
                                    eventName: (ngModelChange)
                                    ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1727094213055]: 
                                      actionValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                            →: |
                                              		try {
                                              				for(let i in page.local.selectedColumns){
                                              					if(i == vars.id){
                                              						//page.local.selectedColumns[i].displayValue = true;
                                              					}
                                              					else{
                                              						page.local.selectedColumns[i].displayValue = false;
                                              					}
                                              				}
                                              		} catch (e) {
                                              		
                                              		} finally {
                                              			return;
                                              		}
                                              
                                      ↓id [ngx.components.UIControlVariable-1727094213058]: 
                                        varValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: script:column.name
                            ↓GridColValue [ngx.components.UIDynamicElement-1727094213061]: 
                              beanData: '{"ionBean":"GridCol"}'
                              tagName: ion-col
                              ↓Attr [ngx.components.UIAttribute-1727094213064]: 
                                attrName: 
                                attrValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:no-padding
                              ↓GenericItem [ngx.components.UIDynamicElement-1727094213067]: 
                                beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                                tagName: ion-item
                                ↓CheckBox1 [ngx.components.UIDynamicElement-1727094213070]: 
                                  beanData: |
                                    '{
                                     "ionBean": "CheckBox",
                                     "ControlName": "plain:name1667636420064",
                                     "DoubleBinding": "script:local.selectedColumns[column.name].value",
                                     "Disabled": "script:! local?.selectedColumns[column.name]?.selected",
                                     "IonMode": "plain:ios"
                                    }'
                                  tagName: ion-checkbox
                                  ↓Style [ngx.components.UIStyle-1727094213073]: 
                                    styleContent: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                          →: |
                                            '/**
                                             * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                             * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                             * They are set using custom property notation, e.g.: --main-color: black;
                                             * and are accessed using the var() function, e.g.: color: var(--main-color);
                                             * You can find below your component''s properties you can customize within the page.
                                             * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                             * For more informations see https://ionicframework.com/docs/theming.
                                            **/
                                            //--background	//Background of the checkbox icon
                                            //--background-checked	//Background of the checkbox icon when checked
                                            //--border-color	//Border color of the checkbox icon
                                            //--border-color-checked	//Border color of the checkbox icon when checked
                                            //--border-radius	//Border radius of the checkbox icon
                                            //--border-style	//Border style of the checkbox icon
                                            //--border-width	//Border width of the checkbox icon
                                            //--checkmark-color	//Color of the checkbox checkmark when checked
                                            //--checkmark-width	//Stroke width of the checkbox checkmark
                                            //--size	//Size of the checkbox icon
                                            //--transition	//Transition of the checkbox icon
                                            	margin-top: 2px;
                                            	margin-bottom: 2px;
                                            
                                            '
                                  ↓slot [ngx.components.UIAttribute-1727094213076]: 
                                    attrName: slot
                                    attrValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                        - MobileSmartSourceType: plain:start
                                  ↓attr [ngx.components.UIControlEvent-1727094213079]: 
                                    attrName: (ngModelChange)
                                    eventName: (ngModelChange)
                                    ↓selectOrDeselectAll [ngx.components.UICustomAsyncAction-1727094213082]: 
                                      actionValue: 
                                        - xmlizable: 
                                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                            →: |
                                              		try {
                                              			for(let i in page.local.selectedColumns){
                                              				if(i == vars.id){
                                              					
                                              				}
                                              				else{
                                              					page.local.selectedColumns[i].value = false;
                                              				}
                                              			}
                                              		} catch (e) {
                                              		
                                              		} finally {
                                              			return;
                                              		}
                                              
                                      ↓id [ngx.components.UIControlVariable-1727094213085]: 
                                        varValue: 
                                          - xmlizable: 
                                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                            - MobileSmartSourceType: script:column.name
                    ↓Event [ngx.components.UIControlEvent-1727094213088]: 
                      attrName: (ionItemReorder)
                      eventName: ionItemReorder
                      ↓AckReorder [ngx.components.UICustomAction-1727094213091]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		page.c8o.log.debug(''[Reorder] Dragged from ''+ event.detail.from  +'' to : ''+ event.detail.to);
                                		
                                		let selectedCols = page.local.selectedColumns;
                                	  	const draggedItem = selectedCols[event.detail.from];
                                		  	
                                		// Reorder the array by moving the item from `from` to `to`
                                		selectedCols.splice(event.detail.from, 1); // Remove item from original position
                                		selectedCols.splice(event.detail.to, 0, draggedItem); // Insert item at new position
                                		
                                		page.local.selectedColumns = selectedCols;
                                		
                                		event.detail.complete();
                                		resolve();
                                '
          ↓GridColTable [ngx.components.UIDynamicElement-1727094213094]: 
            beanData: '{"ionBean":"GridCol","Size":"plain:8"}'
            isEnabled: false
            tagName: ion-col
            ↓CardContainer [ngx.components.UIDynamicElement-1727094213097]: 
              beanData: '{"ionBean":"Card"}'
              tagName: ion-card
              ↓CardHeader [ngx.components.UIDynamicElement-1727094213100]: 
                beanData: '{"ionBean":"CardHeader"}'
                tagName: ion-card-header
                ↓Div [ngx.components.UIDynamicElement-1727094213103]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1727094213106]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	border-bottom: 1px solid var(--ion-color-dark);
                            	padding:16px;
                            '
                  ↓CardTitle [ngx.components.UIDynamicElement-1727094213109]: 
                    beanData: '{"ionBean":"CardTitle"}'
                    tagName: ion-card-title
                    ↓TextItem [ngx.components.UIDynamicElement-1727094213112]: 
                      beanData: '{"ionBean":"TextItem"}'
                      tagName: ion-text
                      ↓Text [ngx.components.UIText-1727094213115]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Select Columns
                      ↓FontStyle [ngx.components.UIFontStyle-1727094213118]: 
                        fontFamily: Saira
                        fontSize: 24px
                        fontStyle: normal
                        ruleTargets: class1727094213112
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'font-family: Saira;
                                font-size: 24px;
                                font-style: normal;
                                '
                    ↓Style [ngx.components.UIStyle-1727094213121]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	text-align:center;
                              	display: flex;
                                  justify-content: center;
                                  align-items: center;
                              '
                    ↓attr [ngx.components.UIAttribute-1727094213124]: 
                      attrName: '[ngStyle]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'script:{''min-height'': leftTitle.el.clientHeight + ''px''}'
                ↓Style [ngx.components.UIStyle-1727094213127]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	padding: 0;
                          '
                ↓Div1 [ngx.components.UIDynamicElement-1727094213130]: 
                  beanData: '{"ionBean":"DivTag"}'
                  identifier: rightDiv
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1727094213133]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'padding: 0 16px;
                            '
                  ↓GenericItem [ngx.components.UIDynamicElement-1727094213136]: 
                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                    tagName: ion-item
                    ↓Icon [ngx.components.UIDynamicElement-1727094213139]: 
                      beanData: |
                        '{
                         "ionBean": "Icon",
                         "IconName": "plain:information-circle-outline",
                         "IconSlot": "plain:start"
                        }'
                      tagName: ion-icon
                    ↓Label [ngx.components.UIDynamicElement-1727094213142]: 
                      beanData: '{"ionBean":"Label"}'
                      tagName: ion-label
                      ↓Paragraph [ngx.components.UIDynamicElement-1727094213145]: 
                        beanData: '{"ionBean":"Paragraph"}'
                        tagName: p
                        ↓some_text [ngx.components.UIText-1727094213148]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:notice2
                      ↓Style [ngx.components.UIStyle-1727094213151]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '/**
                                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                 * They are set using custom property notation, e.g.: --main-color: black;
                                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                                 * You can find below your component''s properties you can customize within the page.
                                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                 * For more informations see https://ionicframework.com/docs/theming.
                                **/
                                //--color	//Color of the label
                                '
                      ↓FontStyle [ngx.components.UIFontStyle-1727094213154]: 
                        fontStyle: italic
                        ruleTargets: class1727094213142
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'font-style: italic;
                                '
                      ↓class [ngx.components.UIAttribute-1727094213157]: 
                        attrName: 
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:text-wrap
              ↓CardContent [ngx.components.UIDynamicElement-1727094213160]: 
                beanData: '{"ionBean":"CardContent"}'
                tagName: ion-card-content
↓PageEvent [ngx.components.UIPageEvent-1727094213163]: 
  viewEvent: onWillLoad
  ↓CallSequence [ngx.components.UIDynamicAction-1727094213166]: 
    beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:lib_SQLConnector.DataBasesList"}'
  ↓SetLocal [ngx.components.UIDynamicAction-1727094213169]: 
    beanData: |
      '{
       "ionBean": "SetLocalAction",
       "Property": "plain:selectedColumns",
       "Value": "script:{}"
      }'
  ↓SetLocal1 [ngx.components.UIDynamicAction-1727094213175]: 
    beanData: |
      '{
       "ionBean": "SetLocalAction",
       "Property": "plain:displayColumn",
       "Value": "script:{}"
      }'
  ↓SetLocal2 [ngx.components.UIDynamicAction-1727094213178]: 
    beanData: |
      '{
       "ionBean": "SetLocalAction",
       "Property": "plain:valueColumn",
       "Value": "script:{}"
      }'
  ↓SetLocal3 [ngx.components.UIDynamicAction-1727107916564]: 
    beanData: |
      '{
       "ionBean": "SetLocalAction",
       "Property": "plain:SQLDriver",
       "Value": "script:''net.sourceforge.jtds.jdbc.Driver''"
      }'
  ↓defineTarget [ngx.components.UICustomAsyncAction-1727094213172]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		try {
            			page.local.target = "table";
            			if(page.navParams.data.target == "select"){
            				page.local.target = "select";
            			}
            		} catch (e) {
            		
            		} finally {
            			return;
            		}
            
↓Footer [ngx.components.UIDynamicElement-1727094213181]: 
  beanData: '{"ionBean":"Footer"}'
  tagName: ion-footer
  ↓ToolBar [ngx.components.UIDynamicElement-1727094213184]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓ButtonSet1 [ngx.components.UIDynamicElement-1727094213187]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
      tagName: ion-buttons
      ↓Button [ngx.components.UIDynamicElement-1727094213190]: 
        beanData: |
          '{
           "ionBean": "Button",
           "IonColor": "plain:primary",
           "IonFill": "plain:solid"
          }'
        tagName: ion-button
        ↓Icon [ngx.components.UIDynamicElement-1727094213193]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:checkmark-outline",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
        ↓Label [ngx.components.UIDynamicElement-1727094213196]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓Text [ngx.components.UIText-1727094213199]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:Confirm
        ↓Event [ngx.components.UIControlEvent-1727094213202]: 
          ↓ComputeBaserowConfiguration [ngx.components.UICustomAction-1727094213205]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                    		let conf : any = {
                    			table_id: null,
                    			table_id_int: null,
                    			columns: [],
                    			hidden: []
                    		}
                    		conf.table_id = `${page.local.groupName}~>${page.local.baseName}~>${page.local.tableName}`;
                    				
                    		if(page.local.target == "table"){
                    			Object.keys(page.local.selectedColumns).forEach(item => {
                    				conf.table_id_int = page.local.selectedColumns[item]["table_id"]
                    				if (page.local.selectedColumns[item]["selected"]) {
                    					conf.columns.push(page.local.selectedColumns[item]["name"])
                    				}			
                    				if (page.local.selectedColumns[item]["hidden"]) {
                    					conf.hidden.push(page.local.selectedColumns[item]["name"])
                    				}			
                    			})
                    		}
                    		else{
                    			Object.keys(page.local.selectedColumns).forEach(item => {
                    				conf.table_id_int = page.local.selectedColumns[item]["table_id"]
                    				if (page.local.selectedColumns[item]["selected"]) {
                    					conf.columns.push(item)
                    				}
                    				if (page.local.selectedColumns[item]["displayValue"]) {
                    					conf.displayValue = item;
                    				}
                    				if (page.local.selectedColumns[item]["value"]) {
                    					conf.value = item;
                    				}			
                    			})
                    			
                    			
                    			/*let col1 = JSON.parse(page.local.displayColumn);
                    			conf.table_id = col1.table_id;
                    			conf.columns.push(col1.name);
                    			if(page.local.diffrentVals){
                    				conf.columns.push(JSON.parse(page.local.valueColumn).name);
                    			}*/
                    		}
                    		console.log("conf", conf);
                    		if (window.parent) {
                    			window.parent["setConfigurationData"](JSON.stringify(conf))
                    		}
                    		resolve(conf);
                    '
            ↓Log [ngx.components.UIDynamicAction-1727094213208]: 
              beanData: |
                '{
                 "ionBean": "LogAction",
                 "message": "script:JSON.stringify(out)",
                 "level": "plain:warn"
                }'